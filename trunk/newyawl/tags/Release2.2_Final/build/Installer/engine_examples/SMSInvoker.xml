<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.citi.qut.edu.au/yawl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="Beta 4" xsi:schemaLocation="http://www.citi.qut.edu.au/yawl c:/yawl/schema/YAWL_SchemaBeta7.1.xsd">
  <specification uri="SMSSender.ywl">
  <name>SMS Invoker</name>
  <documentation>A simple example showing the invocation of an SMS Web service.</documentation>
    <metaData />
    <schema xmlns="http://www.w3.org/2001/XMLSchema" />
    <decomposition id="smsRoot" isRootNet="true" xsi:type="NetFactsType">
      <localVariable>
        <name>SMSMessage</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue />
      </localVariable>
      <localVariable>
        <name>SMSPhoneNumber</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue />
      </localVariable>
      <localVariable>
        <name>SMSReplyMessage</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue />
      </localVariable>
      <processControlElements>
        <inputCondition id="0_InputCondition">
          <flowsInto>
            <nextElementRef id="5_Input_SMS_Data" />
          </flowsInto>
        </inputCondition>
        <task id="5_Input_SMS_Data">
          <flowsInto>
            <nextElementRef id="6_Invoke_SMS" />
          </flowsInto>
          <flowsInto>
            <nextElementRef id="2_" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <completedMappings>
            <mapping>
              <expression query="&lt;SMSPhoneNumber&gt;{/Input_SMS_Data/SMSPhoneNumber/text()}&lt;/SMSPhoneNumber&gt;" />
              <mapsTo>SMSPhoneNumber</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;SMSMessage&gt;{/Input_SMS_Data/SMSMessage/text()}&lt;/SMSMessage&gt;" />
              <mapsTo>SMSMessage</mapsTo>
            </mapping>
          </completedMappings>
          <decomposesTo id="Input_SMS_Data" />
        </task>
        <condition id="2_">
          <flowsInto>
            <nextElementRef id="3_" />
          </flowsInto>
          <flowsInto>
            <nextElementRef id="7_Cancel_SMS" />
          </flowsInto>
        </condition>
        <task id="7_Cancel_SMS">
          <flowsInto>
            <nextElementRef id="2_" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <removesTokens id="6_Invoke_SMS" />
          <decomposesTo id="Cancel_SMS" />
        </task>
        <task id="3_">
          <flowsInto>
            <nextElementRef id="4_PresentReplyMsg" />
          </flowsInto>
          <join code="or" />
          <split code="and" />
        </task>
        <task id="6_Invoke_SMS">
          <flowsInto>
            <nextElementRef id="3_" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
            <mapping>
              <expression query="&lt;SMSMessage&gt;{/smsRoot/SMSMessage/text()}&lt;/SMSMessage&gt;" />
              <mapsTo>SMSMessage</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;SMSPhoneNumber&gt;{/smsRoot/SMSPhoneNumber/text()}&lt;/SMSPhoneNumber&gt;" />
              <mapsTo>SMSPhoneNumber</mapsTo>
            </mapping>
          </startingMappings>
          <completedMappings>
            <mapping>
              <expression query="&lt;SMSReplyMessage&gt;{/Invoke_SMS/SMSReplyMessage/text()}&lt;/SMSReplyMessage&gt;" />
              <mapsTo>SMSReplyMessage</mapsTo>
            </mapping>
          </completedMappings>
          <decomposesTo id="Invoke_SMS" />
        </task>
        <task id="4_PresentReplyMsg">
          <flowsInto>
            <nextElementRef id="1_OutputCondition" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
            <mapping>
              <expression query="&lt;SMSReplyMessage&gt;{/smsRoot/SMSReplyMessage/text()}&lt;/SMSReplyMessage&gt;" />
              <mapsTo>SMSReplyMessage</mapsTo>
            </mapping>
          </startingMappings>
          <decomposesTo id="PresentReplyMsg" />
        </task>
        <outputCondition id="1_OutputCondition" />
      </processControlElements>
    </decomposition>
    <decomposition id="Input_SMS_Data" xsi:type="WebServiceGatewayFactsType">
      <outputParam>
        <name>SMSMessage</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>SMSPhoneNumber</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
    </decomposition>
    <decomposition id="PresentReplyMsg" xsi:type="WebServiceGatewayFactsType">
      <inputParam>
        <name>SMSReplyMessage</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
    </decomposition>
    <decomposition id="Invoke_SMS" xsi:type="WebServiceGatewayFactsType">
      <inputParam>
        <name>SMSMessage</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>SMSPhoneNumber</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <outputParam>
        <name>SMSReplyMessage</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <yawlService id="http://localhost:8080/yawlSMSInvoker/ib" />
    </decomposition>
    <decomposition id="Cancel_SMS" xsi:type="WebServiceGatewayFactsType" />
  </specification>
</specificationSet>


