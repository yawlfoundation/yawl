<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.citi.qut.edu.au/yawl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="Beta 4" xsi:schemaLocation="http://www.citi.qut.edu.au/yawl d:/yawl/schema/YAWL_SchemaBeta4.xsd">
  <specification uri="TreatFever">
  	<name>Treat Fever</name>
  	<documentation>Worklet to treat a fever</documentation>
    <metaData />
    <schema xmlns="http://www.w3.org/2001/XMLSchema" />
    <decomposition id="TreatFever" isRootNet="true" xsi:type="NetFactsType">
      <inputParam>
        <name>PatientID</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Notes</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Fever</name>
        <type>boolean</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Pharmacy</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Name</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Treatment</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <outputParam>
        <name>Notes</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>Pharmacy</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>Treatment</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <processControlElements>
        <inputCondition id="0_InputCondition">
          <flowsInto>
            <nextElementRef id="3_Test_Fever" />
          </flowsInto>
        </inputCondition>
        <task id="3_Test_Fever">
          <flowsInto>
            <nextElementRef id="2_Treat_Fever" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
            <mapping>
              <expression query="&lt;PatientID&gt;{/TreatFever/PatientID/text()}&lt;/PatientID&gt;" />
              <mapsTo>PatientID</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Notes&gt;{/TreatFever/Notes/text()}&lt;/Notes&gt;" />
              <mapsTo>Notes</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Fever&gt;{/TreatFever/Fever/text()}&lt;/Fever&gt;" />
              <mapsTo>Fever</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Name&gt;{/TreatFever/Name/text()}&lt;/Name&gt;" />
              <mapsTo>Name</mapsTo>
            </mapping>
          </startingMappings>
          <completedMappings>
            <mapping>
              <expression query="&lt;Notes&gt;{/Test_Fever/Notes/text()}&lt;/Notes&gt;" />
              <mapsTo>Notes</mapsTo>
            </mapping>
          </completedMappings>
          <decomposesTo id="Test_Fever" />
        </task>
        <task id="2_Treat_Fever">
          <flowsInto>
            <nextElementRef id="1_OutputCondition" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
            <mapping>
              <expression query="&lt;PatientID&gt;{/TreatFever/PatientID/text()}&lt;/PatientID&gt;" />
              <mapsTo>PatientID</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Notes&gt;{/TreatFever/Notes/text()}&lt;/Notes&gt;" />
              <mapsTo>Notes</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Pharmacy&gt;{/TreatFever/Pharmacy/text()}&lt;/Pharmacy&gt;" />
              <mapsTo>Pharmacy</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Name&gt;{/TreatFever/Name/text()}&lt;/Name&gt;" />
              <mapsTo>Name</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Treatment&gt;{/TreatFever/Treatment/text()}&lt;/Treatment&gt;" />
              <mapsTo>Treatment</mapsTo>
            </mapping>
          </startingMappings>
          <completedMappings>
            <mapping>
              <expression query="&lt;Pharmacy&gt;{/Treat_Fever/Pharmacy/text()}&lt;/Pharmacy&gt;" />
              <mapsTo>Pharmacy</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Treatment&gt;{/Treat_Fever/Treatment/text()}&lt;/Treatment&gt;" />
              <mapsTo>Treatment</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Notes&gt;{/Treat_Fever/Notes/text()}&lt;/Notes&gt;" />
              <mapsTo>Notes</mapsTo>
            </mapping>
          </completedMappings>
          <decomposesTo id="Treat_Fever" />
        </task>
        <outputCondition id="1_OutputCondition" />
      </processControlElements>
    </decomposition>
    <decomposition id="Treat_Fever" xsi:type="WebServiceGatewayFactsType">
      <inputParam>
        <name>PatientID</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Notes</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Pharmacy</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Name</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Treatment</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <outputParam>
        <name>Notes</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>Pharmacy</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>Treatment</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
    </decomposition>
    <decomposition id="Test_Fever" xsi:type="WebServiceGatewayFactsType">
      <inputParam>
        <name>PatientID</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Notes</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Fever</name>
        <type>boolean</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Name</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <outputParam>
        <name>Notes</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
    </decomposition>
  </specification>
</specificationSet>


