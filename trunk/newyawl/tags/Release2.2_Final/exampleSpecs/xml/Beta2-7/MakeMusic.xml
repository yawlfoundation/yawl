<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.citi.qut.edu.au/yawl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.citi.qut.edu.au/yawl d:/yawl/schema/YAWL_Schema.xsd">
	<specification uri="MakeMusic.xml">
		<name>Do a career in music</name>
		<documentation>A quick and dirty way to ensure that your client becomes famous.</documentation>
		<metaData/>
		<rootNet id="MakeMusic">
			<inputParam name="applicant">
				<type>xs:string</type>
				<initialValue>ronan keating</initialValue>
			</inputParam>
			<localVariable name="auditionResult">
				<type>xs:string</type>
				<initialValue>failed</initialValue>
			</localVariable>
			<localVariable name="instruments">
				<type>mm:InstrumentListYpe</type>
				<initialValue>&lt;instrument&gt;saxophone&lt;/instrument&gt;&lt;instrument&gt;piano&lt;/instrument&gt;&lt;instrument&gt;guitar&lt;/instrument&gt;</initialValue>
			</localVariable>
			<localVariable name="songsToWrite">
				<type>mm:SongListType</type>
				<initialValue>&lt;song&gt;song1&lt;/song&gt;&lt;song&gt;song2&lt;/song&gt;</initialValue>
			</localVariable>
			<localVariable name="numPerformances">
				<type>xs:nonNegativeInteger</type>
				<initialValue>0</initialValue>
			</localVariable>
			<processControlElements>
				<inputCondition id="start">
					<name/>
					<flowsInto>
						<nextElementRef id="decide"/>
					</flowsInto>
				</inputCondition>
				<task id="decide">
					<flowsInto>
						<nextElementRef id="learn"/>
						<isDefaultFlow/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="audition"/>
						<predicate ordering="1">true()</predicate>
					</flowsInto>
					<join code="and"/>
					<split code="xor"/>
					<decomposesTo id="Decide_to_make_music"/>
				</task>
				<task id="learn" xsi:type="MultipleInstanceExternalTaskFactsType">
					<flowsInto>
						<nextElementRef id="deferred1"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<startingMappings>
						<mapping>
							<expression query="/data/applicant"/>
							<mapsTo>applicant</mapsTo>
						</mapping>
					</startingMappings>
					<decomposesTo id="Learn_to_play_instrument"/>
					<minimum>1</minimum>
					<maximum>4</maximum>
					<threshold>3</threshold>
					<creationMode code="dynamic"/>
					<miDataInput>
						<expression query="/data/instruments"/>
						<splittingExpression query="for $d in /instruments/* return $d"/>
						<formalInputParam>instrument</formalInputParam>
					</miDataInput>
				</task>
				<condition id="deferred1">
					<name/>
					<flowsInto>
						<nextElementRef id="solo"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="joinBand"/>
					</flowsInto>
				</condition>
				<task id="solo">
					<flowsInto>
						<nextElementRef id="initPerform"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="write"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Decide_to_Go_Solo"/>
				</task>
				<task id="joinBand">
					<flowsInto>
						<nextElementRef id="initPerform"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="write"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Join_a_Band"/>
				</task>
				<task id="audition">
					<flowsInto>
						<nextElementRef id="failed"/>
						<isDefaultFlow/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="passed"/>
						<predicate ordering="1">/data/auditionResult = 'passed'</predicate>
					</flowsInto>
					<join code="xor"/>
					<split code="xor"/>
					<decomposesTo id="Do_boy/girl_band_audition"/>
				</task>
				<task id="write" xsi:type="MultipleInstanceExternalTaskFactsType">
					<flowsInto>
						<nextElementRef id="getContract"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<decomposesTo id="Write_a_Song"/>
					<minimum>1</minimum>
					<maximum>10</maximum>
					<threshold>100</threshold>
					<creationMode code="dynamic"/>
					<miDataInput>
						<expression query="/data/songsToWrite"/>
						<splittingExpression query="for $d in /songsToWrite/* return $d"/>
						<formalInputParam>song</formalInputParam>
					</miDataInput>
				</task>
				<task id="getContract">
					<flowsInto>
						<nextElementRef id="makeRecord"/>
					</flowsInto>
					<join code="or"/>
					<split code="and"/>
					<decomposesTo id="Get_a_Recording_Contract"/>
				</task>
				<task id="tour">
					<flowsInto>
						<nextElementRef id="finishJoin"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Do_tour"/>
				</task>
				<condition id="passed">
					<name>Audition Passed</name>
					<flowsInto>
						<nextElementRef id="doAll"/>
					</flowsInto>
				</condition>
				<task id="makeRecord">
					<flowsInto>
						<nextElementRef id="deferred2"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="rehearse"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<startingMappings>
						<mapping>
							<expression query="&lt;songs&gt;{for $d in /data/songsToWrite/* return $d}&lt;/songs&gt;"/>
							<mapsTo>songs</mapsTo>
						</mapping>
					</startingMappings>
					<decomposesTo id="make_record"/>
				</task>
				<task id="doAll">
					<flowsInto>
						<nextElementRef id="makeRecord"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Do_everything_you_are_told"/>
				</task>
				<task id="initPerform">
					<flowsInto>
						<nextElementRef id="initPerform"/>
						<isDefaultFlow/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="getContract"/>
						<predicate ordering="1">/data/numPerformances = '2'</predicate>
					</flowsInto>
					<join code="xor"/>
					<split code="xor"/>
					<startingMappings>
						<mapping>
							<expression query="/data/numPerformances"/>
							<mapsTo>numPerformances</mapsTo>
						</mapping>
					</startingMappings>
					<completedMappings>
						<mapping>
							<expression query="&lt;numPerformances&gt;{/data/numPerformances + 1}&lt;/numPerformances&gt;"/>
							<mapsTo>numPerformances</mapsTo>
						</mapping>
					</completedMappings>
					<decomposesTo id="Do_initial_performance"/>
				</task>
				<task id="developDrug">
					<flowsInto>
						<nextElementRef id="finishJoin"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Develop_drug_habit"/>
				</task>
				<task id="rehearse">
					<flowsInto>
						<nextElementRef id="tour"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Rehearse_Tour"/>
				</task>
				<task id="finishJoin">
					<flowsInto>
						<nextElementRef id="finis"/>
					</flowsInto>
					<join code="or"/>
					<split code="and"/>
				</task>
				<condition id="failed">
					<name>Audiiton failed</name>
					<flowsInto>
						<nextElementRef id="audition"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="learn"/>
					</flowsInto>
				</condition>
				<condition id="deferred2">
					<name/>
					<flowsInto>
						<nextElementRef id="developDrug"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="developArt"/>
					</flowsInto>
				</condition>
				<task id="developArt">
					<flowsInto>
						<nextElementRef id="finishJoin"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Develop_as_artist"/>
				</task>
				<outputCondition id="finis">
					<name>complete</name>
				</outputCondition>
			</processControlElements>
		</rootNet>
		<decomposition id="Rehearse_Tour" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Get_a_Recording_Contract" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="make_record" xsi:type="NetFactsType">
			<inputParam name="songs">
				<type>mm:SongType</type>
				<mandatory/>
			</inputParam>
			<processControlElements>
				<inputCondition id="startMakeRecord">
					<name/>
					<flowsInto>
						<nextElementRef id="choose"/>
					</flowsInto>
				</inputCondition>
				<task id="record" xsi:type="MultipleInstanceExternalTaskFactsType">
					<flowsInto>
						<nextElementRef id="done"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Record_Song"/>
					<minimum>1</minimum>
					<maximum>5</maximum>
					<threshold>3</threshold>
					<creationMode code="dynamic"/>
					<miDataInput>
						<expression query="/data/songs"/>
						<splittingExpression query="for $d in /songs/* return $d"/>
						<formalInputParam>song</formalInputParam>
					</miDataInput>
				</task>
				<condition id="done">
					<name/>
					<flowsInto>
						<nextElementRef id="market"/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="choose"/>
					</flowsInto>
				</condition>
				<task id="market">
					<flowsInto>
						<nextElementRef id="finisMakeRecord"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<decomposesTo id="Send_recording_to_marketing_deptartment"/>
				</task>
				<task id="choose">
					<flowsInto>
						<nextElementRef id="record"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<decomposesTo id="Choose_Songs"/>
				</task>
				<outputCondition id="finisMakeRecord">
					<name>Done</name>
				</outputCondition>
			</processControlElements>
		</decomposition>
		<decomposition id="Do_initial_performance" xsi:type="WebServiceGatewayFactsType">
			<inputParam name="numPerformances">
				<type>xs:string</type>
			</inputParam>
			<outputExpression query="&lt;numPerformances&gt;{/data/numPerformances + 1}&lt;/numPerformances&gt;"/>
		</decomposition>
		<decomposition id="Do_boy/girl_band_audition" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Write_a_Song" xsi:type="WebServiceGatewayFactsType">
			<inputParam name="song">
				<type>xs:string</type>
			</inputParam>
		</decomposition>
		<decomposition id="Do_tour" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Choose_Songs" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Record_Song" xsi:type="WebServiceGatewayFactsType">
			<inputParam name="song">
				<type>mm:SongType</type>
			</inputParam>
		</decomposition>
		<decomposition id="Join_a_Band" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Decide_to_Go_Solo" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Decide_to_make_music" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Send_recording_to_marketing_deptartment" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Develop_drug_habit" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Learn_to_play_instrument" xsi:type="WebServiceGatewayFactsType">
			<inputParam name="instrument">
				<type>xs:string</type>
			</inputParam>
			<inputParam name="applicant">
				<type>xs:string</type>
			</inputParam>
			<outputParam name="skillLevel">
				<type>xs:string</type>
			</outputParam>
		</decomposition>
		<decomposition id="Do_everything_you_are_told" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="Develop_as_artist" xsi:type="WebServiceGatewayFactsType"/>
	</specification>
</specificationSet>
