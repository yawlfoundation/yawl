<?xml version="1.0" encoding="ISO-8859-1"?>

<!--<!DOCTYPE web-app-->
    <!--PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.4//EN"-->
    <!--"http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">-->


<web-app version="2.4">

    <!-- General description of your web application -->

    <display-name>YAWL Resource Service</display-name>
    <description>
        This custom YAWL Service handles all workitem resource allocations, based on the
        resource patterns.
        Copyright 2008 yawlfoundation.org. All rights reserved.
        Author: Michael Adams
        For more information about the YAWL SOFTWARE LICENCE refer to the 'downloads'
        section at http://www.yawlfoundation.org/.
    </description>

    <context-param>
        <param-name>InterfaceB_BackEnd</param-name>
        <param-value>http://localhost:8080/yawl/ib</param-value>
        <description>
            The URL of the engine's interface B.
        </description>
    </context-param>

    <context-param>
        <param-name>InterfaceBWebSideController</param-name>
        <param-value>org.yawlfoundation.yawl.resourcing.ResourceManager</param-value>
        <description>
            The class name of the Interface B Server implementation.
        </description>
    </context-param>

    <!--<context-param>-->
        <!--<param-name>UserName</param-name>-->
        <!--<param-value></param-value>-->
        <!--<description>-->
            <!--If you need to invoke a web service and this is deployed behind-->
            <!--an authenticating proxy server then you ought to set this variable-->
            <!--appropriately.-->
        <!--</description>-->
    <!--</context-param>-->

    <!--<context-param>-->
        <!--<param-name>Password</param-name>-->
        <!--<param-value></param-value>-->
        <!--<description>-->
            <!--If you need to invoke a web service and this is deployed behind-->
            <!--an authenticating proxy server then you ought to set this variable-->
            <!--appropriately.-->
        <!--</description>-->
    <!--</context-param>-->

    <!--<context-param>-->
        <!--<param-name>ProxyHost</param-name>-->
        <!--<param-value></param-value>-->
        <!--<description>-->
            <!--If you need to invoke a web service and this is deployed behind-->
            <!--an authenticating proxy server then you ought to set this variable-->
            <!--appropriately.-->
        <!--</description>-->
    <!--</context-param>-->

    <!--<context-param>-->
        <!--<param-name>ProxyPort</param-name>-->
        <!--<param-value></param-value>-->
        <!--<description>-->
            <!--If you need to invoke a web service and this is deployed behind-->
            <!--an authenticating proxy server then you ought to set this variable-->
            <!--appropriately.-->
        <!--</description>-->
    <!--</context-param>-->

    <context-param>
	    <param-name>EnablePersistence</param-name>
    	<param-value>true</param-value>
    	<description>
    		'true' to enable persistence and logging
    		'false' to disable
        </description>
    </context-param>

    <context-param>
	    <param-name>OrgDataSource</param-name>
    	<param-value>HibernateImpl</param-value>
    	<description>
    		The name of the class (an extension of 'DataSource') which is used to
            as the 'data translation layer' between the ResourceService and a source
            of organisational data. The default YAWL implementation is the
            'HibernateImpl' class.
        </description>
    </context-param>

    <context-param>
	    <param-name>ExternalUserAuthentication</param-name>
    	<param-value>false</param-value>
    	<description>
            When set to false (the default), user passwords are encrypted and stored
            within each user record, and authentication is handled within the
            resource service.
            When set to true, user authentication is deferred to the currently
            implemented external org data source, and passwords are sent to the
            data source as plain text (rather than the default encryption). It is up
            to the external data source to provide valid user authentication in this case.
    		A setting of true is only relevant if an external data source is active; if
            the default YAWL org database is in use, this setting is ignored.
        </description>
    </context-param>

    <context-param>
        <param-name>AllowExternalOrgDataMods</param-name>
        <param-value>false</param-value>
        <description>
            When set to true, will allow an external org data source to be modified via
            the default worklist and/or service APIs.
            The default setting, false, means that an external data source is read-only.
            Either way, this setting only applies to external org data sources and is
            ignored when the default YAWL org database is used.
        </description>
    </context-param>

    <context-param>
	    <param-name>OrgDataRefreshRate</param-name>
    	<param-value>-1</param-value>
    	<description>
            The number of minutes delay between refreshes of org data from data store.
            That is, every X minutes reload the org data from the data store into the
            ResourceService. If the org data source is updated externally, specify
            how often the data should be refreshed. A setting of -1 disables the
            refresh (this is the default, since the YAWL org data source is not
            modified externally). Common settings: 1440 = 24 hours; 360 = 6 hours;
            10080 = 1 week.
        </description>
    </context-param>

    <context-param>
        <param-name>LogOffers</param-name>
        <param-value>true</param-value>
        <description>
            When true (the default), all offers will be logged. May be set to false
            if there are a large number of participants and offer logging is not
            required.            
        </description>
    </context-param>

    <context-param>
        <param-name>DropTaskPilingOnLogoff</param-name>
        <param-value>false</param-value>
        <description>
            An authorized user may choose to 'pile' a certain task, which means they
            will receive all instances of that task, across all instances of the
            process that contains the task.            
            When this param is set to true, piling of tasks for a user will cease when
            the affected user logs out.
            When this param is set to false (the default), piling of tasks for a user
            will continue, whether the user is logged on or not, until it is explicitly
            ceased by the affected user or an administrator. This setting is ignored
            (ie. treated as 'true') if persistence is not enabled.
            This param applies globally to *all* users who pile tasks.
        </description>
    </context-param>

    <context-param>
        <param-name>GenerateRandomOrgData</param-name>
        <param-value>-1</param-value>
        <description>
            Set the param-value to a +ve integer up to 100 to randomly generate that
            number of participants and associated org data. This feature can be used to
            create data to test or demonstrate the YAWL resource service.
            A value of -1 (the default) disables data generation; a value greater than
            100 is treated as 100.
            Some conditions apply:
                1. The default YAWL database is selected (via an 'OrgDataSource'
                   param-value of 'HibernateImpl' above); and
                2. The org data tables must be empty; and
                3. Persistence must be enabled (via the 'EnablePersistence' param above).
        </description>
    </context-param>

    <context-param>
        <param-name>EnableVisualizer</param-name>
        <param-value>false</param-value>
        <description>
            When set to true, a button to show workitems via the Visualizer applet
            will display on user work queues (assumes the visualizer applet is available).
            The default setting is false.
            NOTE: the visualizer is not yet supported.
        </description>
    </context-param>


    <!-- This param, when available, enables the worklet exception
         service add-ins to the worklist. If the exception service
         is enabled in the engine, then this param should also be
         made available. If it is disabled in the engine, the
         entire context-param should be commented out. -->
<!--
    <context-param>
       <param-name>InterfaceX_BackEnd</param-name>
       <param-value>http://localhost:8080/workletService</param-value>
       <description>
          The URL of the worklet exception service.
       </description>
    </context-param>
-->    


    <!--CharsetFilter -->

     <filter>
       <filter-name>CharsetFilter</filter-name>
       <filter-class>org.yawlfoundation.yawl.util.CharsetFilter</filter-class>
         <init-param>
           <param-name>requestEncoding</param-name>
           <param-value>UTF-8</param-value>
         </init-param>
     </filter>

     <filter-mapping>
       <filter-name>CharsetFilter</filter-name>
       <url-pattern>/*</url-pattern>
     </filter-mapping>

    <!-- SERVLETS -->

    <servlet>
        <servlet-name>InterfaceB_Servlet</servlet-name>
        <description>
            Listens to notification of work items from the engine.
            Shouldn't need to change this.
        </description>
        <servlet-class>
            org.yawlfoundation.yawl.engine.interfce.interfaceB.InterfaceB_EnvironmentBasedServer
        </servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
		<servlet-name>ErrorServlet</servlet-name>
		<description>
            Reports that the URI request found nothing, hence the error report.
        </description>
		<servlet-class>org.yawlfoundation.yawl.engine.interfce.ErrorServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

    <servlet>
        <servlet-name>rsGateway</servlet-name>
        <description>
            Gateway to the resources side of the service
        </description>
        <servlet-class>org.yawlfoundation.yawl.resourcing.rsInterface.ResourceGateway</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>


    <servlet>
        <servlet-name>wqGateway</servlet-name>
        <description>
            Gateway to the worklist side of the service
        </description>
        <servlet-class>org.yawlfoundation.yawl.resourcing.rsInterface.WorkQueueGateway</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>


    <servlet>
        <servlet-name>rsLogGateway</servlet-name>
        <description>
            Gateway to the service process logs
        </description>
        <servlet-class>org.yawlfoundation.yawl.resourcing.rsInterface.ResourceLogGateway</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>


    <servlet-mapping>
        <servlet-name>InterfaceB_Servlet</servlet-name>
        <url-pattern>/ib</url-pattern>
    </servlet-mapping>

	<servlet-mapping>
		<servlet-name>ErrorServlet</servlet-name>
		<url-pattern>/error</url-pattern>
	</servlet-mapping>

    <servlet-mapping>
        <servlet-name>rsGateway</servlet-name>
        <url-pattern>/gateway</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>wqGateway</servlet-name>
        <url-pattern>/workqueuegateway</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>rsLogGateway</servlet-name>
        <url-pattern>/logGateway</url-pattern>
    </servlet-mapping>

    <!--
        Define the default session timeout for your application,
        in minutes.  From a servlet or JSP page, you can modify
        the timeout for a particular session dynamically by using
        HttpSession.getMaxInactiveInterval().
    -->

    <session-config>
        <session-timeout>60</session-timeout>   <!-- 60 minutes -->
    </session-config>

    <error-page>
        <error-code>404</error-code>
        <location>/error</location>
    </error-page>


    <!--

         THE FOLLOWING DESCRIBES JAVA SERVER FACES SETTINGS
    -->

  <context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>server</param-value>
  </context-param>
  <context-param>
    <param-name>javax.faces.CONFIG_FILES</param-name>
    <param-value>/WEB-INF/navigation.xml,/WEB-INF/managed-beans.xml</param-value>
  </context-param>
  <context-param>
    <param-name>com.sun.faces.validateXml</param-name>
    <param-value>true</param-value>
  </context-param>
  <context-param>
    <param-name>com.sun.faces.verifyObjects</param-name>
    <param-value>false</param-value>
  </context-param>
  <filter>
    <filter-name>UploadFilter</filter-name>
    <filter-class>com.sun.rave.web.ui.util.UploadFilter</filter-class>
    <init-param>
      <description>
          The maximum allowed upload size in bytes.  If this is set
          to a negative value, there is no maximum.  The default
          value is 1000000.
        </description>
      <param-name>maxSize</param-name>
      <param-value>1000000</param-value>
    </init-param>
    <init-param>
      <description>
          The size (in bytes) of an uploaded file which, if it is
          exceeded, will cause the file to be written directly to
          disk instead of stored in memory.  Files smaller than or
          equal to this size will be stored in memory.  The default
          value is 4096.
        </description>
      <param-name>sizeThreshold</param-name>
      <param-value>65536</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>UploadFilter</filter-name>
    <servlet-name>Faces Servlet</servlet-name>
  </filter-mapping>

  <listener>
    <listener-class>
       org.yawlfoundation.yawl.resourcing.jsf.SessionListener
    </listener-class>
  </listener>

<filter>
   <filter-name>SessionTimeoutFilter</filter-name>
   <filter-class>
       org.yawlfoundation.yawl.resourcing.jsf.SessionTimeoutFilter
   </filter-class>
</filter>

<filter-mapping>
   <filter-name>SessionTimeoutFilter</filter-name>
   <url-pattern>*.jsp</url-pattern>
</filter-mapping>

  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet>
    <servlet-name>ExceptionHandlerServlet</servlet-name>
    <servlet-class>com.sun.errorhandler.ExceptionHandler</servlet-class>
    <init-param>
      <param-name>errorHost</param-name>
      <param-value>localhost</param-value>
    </init-param>
    <init-param>
      <param-name>errorPort</param-name>
      <param-value>25444</param-value>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>ThemeServlet</servlet-name>
    <servlet-class>com.sun.rave.web.ui.theme.ThemeServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>/faces/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ExceptionHandlerServlet</servlet-name>
    <url-pattern>/error/ExceptionHandler</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ThemeServlet</servlet-name>
    <url-pattern>/theme/*</url-pattern>
  </servlet-mapping>
  <welcome-file-list>
    <welcome-file>faces/Login.jsp</welcome-file>
  </welcome-file-list>
  <error-page>
    <exception-type>javax.servlet.ServletException</exception-type>
    <location>/error/ExceptionHandler</location>
  </error-page>
  <error-page>
    <exception-type>java.io.IOException</exception-type>
    <location>/error/ExceptionHandler</location>
  </error-page>
  <error-page>
    <exception-type>javax.faces.FacesException</exception-type>
    <location>/error/ExceptionHandler</location>
  </error-page>
  <error-page>
    <exception-type>com.sun.rave.web.ui.appbase.ApplicationException</exception-type>
    <location>/error/ExceptionHandler</location>
  </error-page>
  <jsp-config>
    <jsp-property-group>
      <url-pattern>*.jspf</url-pattern>
      <is-xml>true</is-xml>
    </jsp-property-group>
  </jsp-config>
    
</web-app>
