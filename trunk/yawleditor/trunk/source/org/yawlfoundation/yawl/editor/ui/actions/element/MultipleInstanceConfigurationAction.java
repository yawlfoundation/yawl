package org.yawlfoundation.yawl.editor.ui.actions.element;

import org.yawlfoundation.yawl.editor.ui.YAWLEditor;
import org.yawlfoundation.yawl.editor.ui.actions.YAWLBaseAction;
import org.yawlfoundation.yawl.editor.ui.elements.model.YAWLMultipleInstanceTask;
import org.yawlfoundation.yawl.editor.ui.elements.model.YAWLTask;
import org.yawlfoundation.yawl.editor.ui.net.NetGraph;
import org.yawlfoundation.yawl.editor.ui.swing.TooltipTogglingWidget;

import javax.swing.*;
import java.awt.event.ActionEvent;

public class MultipleInstanceConfigurationAction extends YAWLBaseAction implements TooltipTogglingWidget {

	
	{
	    putValue(Action.SHORT_DESCRIPTION, getDisabledTooltipText());
	    putValue(Action.NAME, "Multiple Instances...");
	    putValue(Action.LONG_DESCRIPTION, "Configure the multiple instances for this task."); 
      putValue(Action.SMALL_ICON, getPNGIcon("application_cascade"));
	  }
	
	private NetGraph net;            
	private YAWLTask task;
	
	public MultipleInstanceConfigurationAction(YAWLTask task){
		this.net = this.getGraph();
		this.task = task;
	}
	
	public void actionPerformed(ActionEvent event) { 
		if(task instanceof YAWLMultipleInstanceTask){
				final YAWLMultipleInstanceTask task = (YAWLMultipleInstanceTask) this.task;
				java.awt.EventQueue.invokeLater(new Runnable() {
		            public void run() {
		                MultipleInstanceConfigureJDialog dialog = new MultipleInstanceConfigureJDialog(new javax.swing.JFrame(), true, task);
		                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
		                    
		                });
		                dialog.setLocationRelativeTo(YAWLEditor.getInstance());
                    dialog.setResizable(false);
		                dialog.setVisible(true);
		            }
		        });
		}
	}

	public String getDisabledTooltipText() {
		return null;
	}


	public String getEnabledTooltipText() {
		return "Configure the multiple instances for this task.";
	}
	/*
	 * MultipleInstanceConfigureJDialog.java
	 *
	 * Created on 25/01/2010, 11:08:44 AM
	 */

	/**
	 *
	 * @author jingxin
	 */
	private class MultipleInstanceConfigureJDialog extends javax.swing.JDialog {
		
		private YAWLMultipleInstanceTask task;
		private long maxInstance;
		private long minInstance;
		private long threshhold;
		private int createType;

	    /** Creates new form MultipleInstanceConfigureJDialog */
	    public MultipleInstanceConfigureJDialog(java.awt.Frame parent, boolean modal, YAWLMultipleInstanceTask task) {
	        super(parent, modal);
	        this.task = (YAWLMultipleInstanceTask) task;
	        initComponents();
	        
	    }

	    /** This method is called from within the constructor to
	     * initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is
	     * always regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">
	    private void initComponents() {
	    	
	    	this.setTitle("Multiple Instance Task Configuration");

	        reduceMaxLabel = new javax.swing.JLabel();
	        reduceMaxjTextField = new javax.swing.JTextField();
	        increaseMinjLabel1 = new javax.swing.JLabel();
	        IncreaseMinjTextField = new javax.swing.JTextField();
	        IncreaseThresholdjLabel = new javax.swing.JLabel();
	        threshholdjTextField = new javax.swing.JTextField();
	        
	        ForbidDynamiccheckbox = new java.awt.Checkbox();
	        donejButton = new javax.swing.JButton();
	  

	        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

	        reduceMaxLabel.setText("Reduce maximal number of instances to");

	        increaseMinjLabel1.setText("Increase minimal number of instances to");

	        IncreaseThresholdjLabel.setText("Increase Threshold");

	        
	        
	        this.maxInstance = task.getMaximumInstances();
	        this.minInstance = task.getMinimumInstances();
	        this.threshhold = task.getContinuationThreshold();
	        this.createType = task.getInstanceCreationType();
	        
	       
	        this.reduceMaxjTextField.setText(((Long)task.getConfigurationInfor().getReduceMax()).toString());
	        this.IncreaseMinjTextField.setText(((Long)task.getConfigurationInfor().getIncreaseMin()).toString());
	        this.threshholdjTextField.setText(((Long)task.getConfigurationInfor().getIncreaseThreshold()).toString());
	        if(task.getConfigurationInfor().isForbidDynamic()){
	        	this.ForbidDynamiccheckbox.setEnabled(false);
	        }else {
	        	this.ForbidDynamiccheckbox.setEnabled(true);
	        }
	        	
	       
	        ForbidDynamiccheckbox.setLabel("Forbid dynamic creation of instances");
	        donejButton.setText("Done");
	        donejButton.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                donejButtonActionPerformed(evt);
	            }
	        });

	        GroupLayout layout = new GroupLayout(getContentPane());
	        getContentPane().setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addComponent(ForbidDynamiccheckbox, GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
	                    .addComponent(donejButton)
	                    .addGroup(layout.createSequentialGroup()
	                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
	                            .addComponent(IncreaseThresholdjLabel, GroupLayout.Alignment.LEADING,
                                      GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
	                            .addGroup(GroupLayout.Alignment.LEADING,
                                  layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
	                                .addComponent(increaseMinjLabel1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                                .addComponent(reduceMaxLabel, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
	                        .addGap(10, 10, 10)
	                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
	                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
	                                .addComponent(IncreaseMinjTextField, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
	                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
	                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
	                                    .addComponent(reduceMaxjTextField, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)))
	                            .addComponent(threshholdjTextField, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE))))
	                .addContainerGap())
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addGap(37, 37, 37)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(reduceMaxLabel, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(reduceMaxjTextField, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
	                .addGap(22, 22, 22)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(increaseMinjLabel1, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(IncreaseMinjTextField, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
	                .addGap(18, 18, 18)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(IncreaseThresholdjLabel, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(threshholdjTextField, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
	                .addGap(33, 33, 33)
	                .addComponent(ForbidDynamiccheckbox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
	                .addGap(37, 37, 37)
	                .addComponent(donejButton)
	                .addContainerGap(25, Short.MAX_VALUE))
	        );

	        pack();
	    }// </editor-fold>

	    private void donejButtonActionPerformed(java.awt.event.ActionEvent evt) {
	        // TODO add your handling code here:
	    	long newMax = Long.parseLong(this.reduceMaxjTextField.getText());
	    	long newMin = Long.parseLong(this.IncreaseMinjTextField.getText());
	    	long newThreshold = Long.parseLong(this.threshholdjTextField.getText());
	    	if( (newMax <= this.maxInstance)&&(newMax >= newMin) 
	    			&&(newMin <= newMax) &&(newMin >= this.minInstance) 
	    			&& (newThreshold >=this.threshhold) && (newThreshold >= newMin)
	    			&& (newThreshold<= newMax)){
			    	if(this.ForbidDynamiccheckbox.getState()){
			    		this.task.setInstanceCreationType(YAWLMultipleInstanceTask.STATIC_INSTANCE_CREATION);
			    	}
			    	this.task.getConfigurationInfor().setReduceMax(newMax);
			    	this.task.getConfigurationInfor().setIncreaseMin(newMin);
			    	this.task.getConfigurationInfor().setIncreaseThreshold(newThreshold); 
			    	this.setVisible(false);
			    	
	    	} else {
	    		 JOptionPane.showMessageDialog(null, "Invalid input parameter!");
	    	}
	    	//`this.
	    }


	    // Variables declaration - do not modify
	    private java.awt.Checkbox ForbidDynamiccheckbox;
	    private javax.swing.JTextField IncreaseMinjTextField;
	    private javax.swing.JLabel IncreaseThresholdjLabel;
	    private javax.swing.JLabel increaseMinjLabel1;
	    //private javax.swing.JLabel ForbidDynamicjLabel;
	    private javax.swing.JLabel reduceMaxLabel;
	    private javax.swing.JTextField reduceMaxjTextField;
	    private javax.swing.JTextField threshholdjTextField;
	    private javax.swing.JButton donejButton;
	    // End of variables declaration

	}

}
