package org.yawlfoundation.yawl.editor.core.repository;

import org.yawlfoundation.yawl.elements.YDecomposition;
import org.yawlfoundation.yawl.elements.YNet;
import org.yawlfoundation.yawl.exceptions.YSyntaxException;
import org.yawlfoundation.yawl.util.XNode;

import java.util.List;

/**
 * @author Michael Adams
 * @date 6/08/13
 */
public class NetRepository extends DecompositionRepoMap {

    protected NetRepository() {
        super("netDecompositions");
    }


    /**
     * Adds a task decomposition to the repository
     * @param name a reference name for the task decomposition
     * @param description a description of it
     * @param net the task decomposition to add
     * @return whether the add was successful
     */
    public String add(String name, String description, YNet net) {
        return super.add(name, description, net);
    }


    /**
     * Gets a task decomposition from the repository
     * @param name a reference name for the task decomposition
     * @return the referenced task decomposition, or null if not found
     */
    public YNet get(String name) throws YSyntaxException {
        return (YNet) super.get(name);
    }


    /**
     * Removes a task decomposition from the repository
     * @param name a reference name for the task decomposition
     * @return whether the removal was successful
     */
    public YNet remove(String name) {
        return (YNet) super.remove(name);
    }


    /**
     * Gets a sorted list of descriptors for all stored task decompositions
     * @return A sorted list of RepoDescriptors (String pairs - name, description)
     */
    public List<RepoDescriptor> getDescriptors() {
        return super.getDescriptors();
    }


    // writes a task decomposition to xml
    // since a specification adds some xml to that generated by a decomposition, we
    // have to replicate it here
    protected String toXML(YDecomposition decomposition) {
        YNet net = (YNet) decomposition;
        XNode netNode = new XNode("decomposition");
        netNode.addAttribute("id", net.getID());
        netNode.addContent(net.toXML());
        return netNode.toString();
    }

    protected void addXsiAttribute(XNode decompositionNode) {
        decompositionNode.addAttribute("xsi:type", "NetFactsType");
    }

}
