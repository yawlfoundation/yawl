Version 2.0 beta (update 1) (03/07/2008) (MJA)
  - Resource Wizard dialogs now remain 'always on top' when active.
  - In the Resource Dialogs, replaced all occurrences of 'Users' with 'Participants'Êand
    reworded/corrected the text where necessary.
  - In the Resource Dialogs, sorted the participant and role lists. Deferred allocation
    list now shows net-level vars (restricted to String type only).
  - In the Resource Wizard, fixed the "retain familiar" and "4-eye principle"
    checkboxes so they can be deselected after being selected (i.e. can now undo
    a previous choice).
  - In Resource Wizard, added buttons to unselect all previous selections of roles
    and/or paticipants in the distribution set selection screen.
  - Added the ability to mark/unmark a decomposition as 'automated' in the decomposition
    dialog.
  - Set 'Manage Resourcing' menu to only be available when the decomposition is not
    'automated'.
  - Added the ability to set a 'codelet' for an automated task, which will be executed
    when the task is enabled.
  - Modified parameter mapping dialog so that a choice can be made between mapping a
    task variable's value or an expression to an output parameter.
  - Completed functionality of task timer setting, so that a timer can be set by
    fixed expiry date, duraton or deferred values via a net-level parameter. To
    facilitate the deferred option, a new type, YTimerType, has been included as a
    basic data type.
  - Refactored the 'save on exit' dialog functionality so that it only appears if
    changes have been made since the last save.
  - Removed the superfluous "Verify Password" field from "Set Resourcing Service" and
    "Set Engine Detail".
  - Various renaming of menu items throughout.
  - Modified the schema preamble in the data definition dialog by prefixing 'xs:',
    allowing for symbolic referencing in data schemas.
  - Also in the data definition dialog, added Copy, Cut, Paste, Undo and Redo buttons
    and CTRL-V and CTRL-C as shortcuts; also changed the length of a TAB to 2 spaces
    (down from 16); and doubled the initial size of the dialog.
  - Checkbox added to export specification dialog to auto increment version number.
    The version number is now saved when dialog exits, and is reflected in spec xml.
  - The export specification dialog will now ask for a valid specification id the first
    time a specification is exported, if it hasn't already been set in the specification
    properties; 'unnamed.ywl' is no longer considered to be a valid id.
  - Fixed a bug that was throwing an exception if a role name uses the "&" symbol.
  - Fixed generation of export files containing simply the word 'null' if a problem
    occurred during xml generation. Now a warning dialog will display and the file will
    not be created.
  - Added a 'Drop Task Decomposition' menu item to the task popup menu, which
    disconnects a task from a decomposition (but does not remove it from the editor
    session, so that it can be rejoined to the task or used by other tasks).
  - Refactored code so that new connection attempts to the engine or resource service
    with different details reinitiates the connection (previously they were ignored).
    Also improved the dialog's look and feel.
  - When creating a new specification, its window size will completely fit within the
    outer window.
  - When importing a specification from xml, its window size will completely fit within
    the outer window.
  - A warning dialog displays when a connection with the resource service is not
    available, and the "Manage Resourcing" menu is selected.
  - Fixed a bug where, if the name of a complex type is too long, other widgets were
    "cramped" in the update parameters dialog.
  - Added the ability to specify a 'custom form' for a task.
  - Fixed a bug where open net references were being displayed in the wrong place on
    the View menu.
  - Fixed bug where importing a specification from xml would its lose flow parameters.
  - Fixed bug where importing a specification from xml with more than a single net
    would start non-root nets iconified.

Version 2.0 beta (30/05/2008)
  * LWB: Upgraded the editor to use version 1.0 of the engine.  This includes a complete
         renaming of the source package hierarchy, and breaks save-file compatibility
         with previous versions of the editor.
  * LWB: Also included in the move to the 1.0 engine is a powerful replacement of the
         resource perspective. The previous YAWL environment support 9 of the 43 identified
         resource patterns.  This release supports 38. We have no plans to support
         the remaining five patterns at this time.
  * LWB: Changed the specification version number to be a decimal number instead of a
         free-form string. This includes the export dialog now supplying the specification 
         version as a convenience to allow a workflow designer to more easily manage 
         variations the specifications they export.
  * LWB: After numerous requests, the pallet bar can now be resized via a
         sliding bar, mostly to allow a clear view into a deep icon tree.  However, 
         given a couple of Swing limitations, the palette bar can no longer be detached
         from the base editor window.
  * LWB/MF: Incorporated the extended attribute concept that has been coded into the
         M2 branch of the editor. Via the plugin mechanism, workflow designers can now
         specify extra attributes to be stored on variables and decompositions which
         will be exported into the engine specification, and used as required for their own
         custom services.
  * DT:  Small change to the pause mechanism used at editor startup to make
         better usage of system CPU.
  * LWB: Fixed a bug where the path of plugin icons was absolute, stopping
         plugin task icons from working on machines where the plugin path is different.
  * LWB: Fixed a bug where the view menu would occasionally show the wrong icon for a net.
  * LWB: Fixed a bug where the paste of a copied net element would result in the
         copy having the same engine ID as the original, disrupting correct engine
         export/validation behaviour.	
  * LWB: Fixed a bug where engine validation was failing, claiming that max instances was
         smaller than min instance on multi-instance tasks when max instances was set to 
         infinity.
  * LWB: Some refactoring around saving, closing and exiting to ensure that whenever a user
         cancels their desire to save, close or exit, they are returned to the editor
         correctly.
  * LWB: Fixed a bug where predicates and flow priorities were occasionally being reset on
         tasks with XOR/OR splits.
  * LWB: After a request from an industry collaborator, the behaviour to iconify nets
         has been removed. This is mostly due to occasional odd behaviour witnessed
         with Swing that is outside the control of the programmer, causing undue grief.

Version 1.5.1 (08/10/2007)
  * LWB: Fixed a bug where multiple-instance tasks were not being initialsed properly and consequently
    causing a number of dialogs, and behaviours around multiple-instance tasks to fail.
  * LWB: Changed the ordering of menu items on the vertex popup menu so that the "Cut" action 
    no longer appears at the top of the menu.
  * LWB: Fixed a bug where cutting a task with attached flows containing predicates, 
    then undoing the  cut, would result in a previously correctly validating specification 
    to stop validating.
  * LWB: Enhanced the editor so that it shows a broken icon if I cannot find the icon specified
    (useful for transferring specs between machines with different icon sets plugged in).
  * LWB: Fixed a bug where frame order was not being preserved between an "Iconify all" 
    action and a "Show all" action for the nets of a specfication.
  * LWB: The editor is now closer to (but not perfectly) rebuilding the state of the net 
    frames on a load, as per how the workflow designer left the state on a save.
  * LWB: Fixed a bug where the editor was reacting poorly to an exception being thrown in 
    an engine client-side API call when attempting to connect to a non-existant engine.

Version 1.5 (27/07/2007) 
  * LWB: Atomic tasks have been enhanced so that an icon can be embedded within the task
    to help in user understandability of a net. This includes a plugin mechanism allowing
    workflow designers to add their own icons.
  * LWB: Decorators on tasks have now been enhanced so that joins and splits can now have
    differing fill colours to help visually distinguish between them.  
  * LWB: Now, when selecting a single net element, a notes tab will appear in the bottom
    pane of the editor, allowing workflow designers to add design notes (which will not be
    exported to the engine specification) to the selected element.
  * LWB: You can now right-click on a flow to get a popup menu for that flow. Kness
    can be added and removed from this menu, as well as changing the line style of the
    flow.
  * LWB: Enhanced the editor so it is now possible to change the ordering of task variables,
    net variables, and task parameter queries.
  * LWB: Enhaned the editor to include a convenience dialog that allows the rapid construction
    of decompositions for atomic tasks along with matching variables and parameters by
    simply choosing a number of net variables to supply and receive data. This can only
    be done on atomic tasks with no decompositions.
  * LWB: Fixed a bug where the initial values of net local variables were being double-quoted 
    at engine export time. This is especially problematic for initial values of complex-type 
    variables. 
  * LWB: Fixed a bug where the deletion of a variable in one task would cause the deletion of 
    XQueries in unrelated tasks whose decompositions contained equivalent variables to the 
    one deleted.
  * LWB: Fixed a bug where the Net Variable dialog was incorectly attempting to validate the 
    initial values of local net variables when the dialog itself was only partially 
    initialised in preparation for display.
  * LWB: Fixed a bug where the variable expression was missing a leading "/" character when
    pressing the "XPath expression" button on the Flow Details dialog for
    tasks with OR and XOR splits.
  * LWB: Upgraded editor to use JGraph 5.9.2.2 and Proguard 3.8.
  * LWB: Fixed a bug where cancelling a save-as action on a specification was being ignored,
    and the file was being saved regardless.
  * LWB: Fixed a bug where you could not drag an outgoing flow from a split decorator port.
  * MJF: Fixed a bug where null pointer exceptions would occasionally happen when changing
    the XPath expression of flows from XOR/OR splits on a variable name change.
  * MJF: Removed the potential for class cast exceptions. Now the analysis code catches key 
    exceptions and included them in the error list it generates.
  * LWB:  Fixed a bug in the routing flows that connect a task to itself.

Version 1.4.5 (27/04/2007) "Blobby"
  * The editor has been upgraded to now use Engine Beta 8.2.
  * The editor has been upgraded to now use Jgraph 5.9.2.1.
  * Enhanced the editor so that it no longer specifically needs the flow button 
    on the palette. Now, so long as you have a task or condition button depressed,
    flows can be drawn simply by hovering over an element's valid ports and dragging
    between elements. You will now drag elements instead of creating new ones when
    left-clicking an exisiting element on the net. 
  * Now, when a user selects a single task, the palette menu expands to allow the use to modify the
    split and join decorators for the task, without having to go to the popup menu for the task.
  * Fixed a bug where a graph that was scaled would stop the user from being able to draw flows between elements.
  * Now, on the label Element dialog, hitting enter in the label field will do the same as pressing the done button. 
    This is a user convenience for quickly making label changes.
  * The upgrade to 5.9.2 of JGraph broke certain cut and paste behaviour.  This is now fixed to work with the 
    latest JGraph.
  * Altered how text is positioned with respect to the graphs upon export to PNG, JPG and print jobs.  The text
    should now appear above the graph without writing over the top of it.
  * Save files are now saved to a temporary file first and then copied to the final specified file name. If there is
    an editor crash whilst saving, only the temporary file will be corrupted.
  * Fixed a bug where saving a specification with a task that has a single flow coming into or going out of it, then
    reloading the specification would result in the user being unable to add a decorator for that flow.
  * Fixed a bug where right-clicking on the knee of a flow would see the pallet popup menu appear whenever the redrawn
    flow no longer lay underneath the mouse after knee removal.
  * Fixed a bug where cells could be be moved beyond the left or top edge of a net if movement was done with the keyboard.
  * Fixed a bug where on print/export of a net, if the secification/net identification string was longer than the 
    net width, the string would be truncated to the net width.
  * When users now create a net from the "Unfold to Net..." popup menu item, they will receive the net decomposition dialog, 
    allowing them to make changes to the net decomposition before it is assigned to the composite task selected. 
  * Enhanced the problem table that appears on validation or ananalyis to display a tooltip with the full text of
    the problem text when the mouse hovers overs a particular problem.
  * Enhanced the editor so that it now wraps text on labels when labels get overly long.
  * Enhanced the editor so that the status bar changes to indicate what it's doing when manipulating long-running file operations.
  * Fixed a bug where if you select "Cancel" at the exit confirmation dialog, the window close widget stops working. 
  * Fixes to the reduction rules and analysis code introduced to speed up processing on certain types of specifications.
  * Enhanced the editor cursor to show the hourglass (busy) icon when engaged in file operations.
  * Fixed a bug where, after saving a specification, users could then assign net deecompositions to atomic tasks.

Version 1.4.4 (29/11/2006) "MoreMoe"
  * Upgraded the editor to fix some bugs in reset net analysis and to include reduction rules for specification analysis.

Version 1.4.3 (25/08/2006) "Deltapoint"
  * There is now a new palette menu item allowing users to drag the visible window of a 
    net around.
  * Fixed a couple of bugs that stopped the "Label Element" dialog from ensuring that 
    the label text field had focus when the dialog appears.
  * Fixed a bug where the alignment toolbar buttons were retaining focus instead of
    passing focus back to a net after an element alignment within that net.
  * Fixed a bug where, if a task already had a label, but later had a decomposition
    specfied for it, the decomposition label was overwriting the task label.
  * Fixed a bug where no engine connection would cause the Task decomposition dialog 
    some time to appear.
  * Enhanced zoom behaviour so that an editor save file will now be reloaded with the
    same zoom and position within a net as it was saved.
  * The editor has been upgraded to now use Jgraph 5.9.2.
  * Now, individual nets can have differing background colours. A new menu item on the
    net menu allows a particular net to have a background colour other than the default.
  * Fixed a bug where the Parameter Update dialog required the user to press one of the
    XQuery generating buttons before the done button for the dialog would be enabled.
  * Fixed a bug where selection of new variables for manipulation in a multiple-instance
    task would leave XQueries around for the old variables.
  * Small change to how the Task Variable update dialog decides whether a variable name is
    valid or not.  This is an attempt to stop intermittent, hard to reproduce problems where
    the done button on the task variable update screen will occasionally become disabled
    for no discernable reason.
	
Version 1.4.2 (13/07/2006) "Ironforge"
  * Fixed a bug where the "Set Label" dialog box was remembering the last thing
    typed into it, and refusing to set the text of a new element if the newly
    typed text matched the last stored memory.
  * Changed the default double-click behaviour on all net elements to be that of
    the label element dialog (rational being that control flow, and description
    of that flow for people, should be the first design task.   After the 
    flow has been sufficiently sketched out, decompositions, etc should be added in).
  * The ability to click on a composite task and have it's unfolding net appear 
    has thus needed shifting. Now, if the user holds down the <CTRL> key when left-clicking
    a composite task, the net it unfolds to will be brought to the front and given focus.
    If the composite task has no unfolding net yet, the dialog for selecting a net
    will appear instead.
  * There is now a new menu item avaiable from the "View" menu, allowing workflow
    designers to chose an alternate background colour for nets. This is useful for
    more easily visualising large/complex workflows.
  * Refactored some of the core graph behaviour used for mass-movement of net elements
    to simplify and speed up their movement.
  * Enhanced the printout and PNG export functionality to write the Specification
    ID and Net ID to the generated output image.
  * There are now a number of zoom options available from the menus and toolbar for
    changing the zoom level on nets. The "Resize Net" menu item has consequently been
    retired in favour of using zoom functionality to passively manage the overall net
    size.Included in this work is more intuitive management of resizinging a net when 
    users are working on the edge of the net. 

Version 1.4.1 (19/05/2006) "With our thoughts, we make the world"
  * This version of the editor has been upgraded to use version 7.2.1 of the YAWL Engine, 
    JGraph 5.8.1.1 and ProGuard 3.6.
  * With this release, the label underneath a task is no longer the task's decomposition
    label.  A new popup menu item is available for tasks, "Set Label..." that allows 
    workflow designers to write whatever freeform text they desire for the task (in
    exactly the same manner as conditions). If there is no label when  a designer assigns a 
    decomposition or an unfolding net, decomposition/net label will be used as a default for 
    the task label. 
  * Now that decompositions are buried a little deeper in the user-interface, tooltips
    for net elements have been upgraded to show a number of lines of relevant information
    for elements.  Hovering over a task will expose the decomposition the task has been 
    assigned to, along with other information such as engine id, and the decorators used.
  * Data that will eventually be used as text between XML tags in the engine XML (for instance,
    Specification properties, and Net ele	ment labels) are now controlled by a new text
    widget that does not allow XML special characters (such as '<' and '>') to be input.
  * The Parameter Update dialog has had some usability enhancements to clarify the expected 
    usage of the two XQuery generation buttons supplied as a user-convenience. Now, when the 
    workflow designer hovers their mouse over one of the buttons, text will appear above the 
    XQuery editor describing the intended usage of the button.
  * Clarification of net/task variable scoping rules resulted in the editor being 
    loosened up to allow net output-only variables to be used in XQueries feeding
    task input parameters (ie - all enclosing net variables are usable for passing 
    state to enclosed task variables).
  * Fixed a small bug to do with engine logging code causing exceptions when the editor
    validates, imports or exports if running under non-Windows/non-Tomcat installed 
    environments.
  * Explicitly spelled out the compatible version of Java to be used with the editor.
  * A couple of small editor import bug fixes where engine specifications containing output 
    parameter data and/or tasks with no decompositions were causing NPEs and subsequent import 
    failures.
  * Some work has been done to make the problems that appear in the editor 
    split pane a little less kludgy than it was previously.
  * Fixed a bug where the editor was prompting users for whether they should save a 
    specification when closing the editor, even when there was no specification to save.
  * Fixed a bug where the triggering task of a cancellation set could not be a member of that
    cancellation set.
  * Enhanced the "Set Engine Detail" dialog to supply a "Test Connection" button, allowing
    users to test whether their connection detail will be accepted by a running YAWL Engine.

Version 1.4 (25/02/2006) "John Dee's Imperialist Dreams"
  * This version of the editor has been upgraded to use YAWL Engine Beta 7.1, JGraph 5.7.4.6 and
    Proguard 3.5.
  * The editor now has an import facility, allowing it to load in engine specification XML files.
    There is a very simple (and thus ugly) automated layout algorithm supplied. Feel free to get
    involved and supply better options for future releases.
  * The editor now incorporates a default analysis tool based upon the similarity between
    YAWL nets and Reset nets. WofYAWL now acts as a plugin to further supply analysis results.
    Users can configure the editor to use one or both analysers and the options they both offer.
  * Now, for all the editor widgets that check on the validity of XML standards, such as 
    XMLSchema, XMLSchemaInstance, and XQuery/XPath, these widgets have been enhanced to have
    a split-pane where a table of parse-errors appear if there are problems with the text
    supplied to the editor widget. The Data Type Definition update dialog is an example of this 
    concept in action.
  * Workflow designers can now drag flows between net elements instead of having to delete
    then and redraw them.
  * Enhanced the Pallete buttons so the ALT-1, through ALT-7 key combinations act
    to select a particular palette button. This is an implementation of the 
    "Helping Hands" pattern, described here: http://www.welie.com/patterns/gui/hands.html
  * The Data type drop-down boxes now sort the user-defined XMLSchema data-types alphabetically 
    after the editor-supplied base data-types.
  * The editor now remembers the last directory an import/export operation was done on, as well
    as the last directory a save/load was done from, separately.
  * There is a new dialog available off the net menu that allows users to dictate the exact size
    of a net, rather than having to make it larger by dragging net elements to the edge of the 
    net.
  * Users can now invoke the editor from the command-line, specifying a file name to open. This 
    feature allows 3rd-party software to invoke the editor pre-loaded with an existing save-file.
    Specifying a non-existant file on the command-line will see the editor open a new specification
    of the supplied name.
  * Double-clicking on a composite task that has an unfolding net specified for it will now
    see the unfolding net brought to the front and given focus. Similarly, double-clicking on conditions
    will bring up a label dialog for them. Double clicking on atomic tasks will bring up a 
    task decomposition update dialog.
  * By popular demand, the warning dialog that appears when a user is about to delete a net
    has been reintroduced.

Version 1.3.02 (11/11/2005) "Nephilim Revisited"
  * Fixed a bug where multiple-instance tasks "Set Instance Detail" dialog was
    throwing an exception and failing to display for new multiple-instance tasks.
  * Fixed a problem where pressing the close button on the YAWLEditor main window
    would intermittently stop the confirmation dialog from displaying correctly.
  * Fixed issues where pointing the editor at different running engines would have
    the editor left at the old engine under certain circumstances.
  * Populating the drop-down box of the "Task Decomposition" dialog is now done in
    its own thread to allow the dialog to appear quickly when engine interaction is slow.
  * Text Fields that automatically select the text when they gain focus will now
    have the caret at the beginning of the field instead of the end.
  * Small layout changes made to the Decomposition Dialogs.
  * Fixed a bug where users could enter XML special characters into some of the 
    specification properties dialog fields, causing engine export problems. Enhanced
    this dialog so that all text fields are now of the auto-select variety.

Version 1.3.01 (04/11/2005) "Nephilim"
  * Fixed a bug where direct allocation SQL queries to the engine were failing
    in resource management.
  * Fixed a bug where the parameter update dialog was allowing users to press 
    the "XQuery Entire Element" button of a task or net variable when no variable 
    was available, causing a null-pointer exception out at the command line.
  * Enhanced the editor build script to support more streamlined release 
    updates, reducing the potential for manual error in new releases.

Version 1.3 (15/06/2005) "Direct Line to Divinity"
  * Fixed a bug where XPath predicates could not be constructed from input-only 
    net variables.
  * Editor now uses Engine BETA 6 code for validation and export.
  * Stopped the editor from doing special character quoting. The newest engine
    version now fully inherits this responsibility. To ensure users don't damage
    the XQuery expressions, users can no longer enter (&) characters in the 
    XQuery/XPath edit widgets.
  * Those text widgets that eventually make data into XML elements and attributes
    were limited to alphanumeric characters (a-z, A-Z, 0-9). Some allow spaces that
    are converted into (_) characters on export. For these fields, the follow 
    characters can now also be used (_-.).  Also, UTF-8 characters can now be 
    specified within the editor and exported into the engine. Further validation 
    of these strings is being done to ensure XML naming rules are fully enforced.
  * Shuffled about the popup menu for net elements to group functions of a given
    pattern perspective together.
  * Added a new element popup menu item for resource management of tasks.
  * There is now a "Set Organisation Database Detail" dialog avalable off the 
    Tools menu for specifying where to find an organisation database.
  * The popup menus for tasks now have a new entry called "Manage Resourcing",
    where workflow designers can say who should do, or is authorised to do, 
    the selected task.
  * There is now a concept of reserved variables in the engine. As a convention,
    they begin with "Yawl". To accomodate this, user-defined variables can
    no longer begin with "Yawl".
  * This release introduces a major change in how editor state is saved and loaded,
    making it incompatible with previous versions, but, (hopefully) now allows for
    future releases to be save-file compatible with this version (note: changes to
    the JGraph save format will still cause save file incompatibility - the upgrade
    to a more current Jgraph, planned for next release will cause just such an issue).
  * All Palette buttons, toolbar menu items and popup menu items now offer 
    advice on what's needed to enable them when they're disabled.
  * The editor now catches exceptions being generated at editor file loading time,
    reports an error, and reverts to a state of having no open specifications. 
    Previously, exceptions at file load time could leave the editor in a state 
    where it could not load anything else without a restart.
  * Fixed a bug where users could exit the application in the middle of a specification
    file operation, opening the possibility of file corruption for large specifications.
  * The editor now supports wofyawl 0.4 file format output instead of wofyawl 0.2.
  * There is now a new menu item under the specification menu allowing workflow
    designers to record the specification ID, name, description, author, version number 
    and valid date ranges. This information will now be exported with the engine XML.
  * A major change was made to how engine identifiers for net elements was made.
    Now, the first time a net element is used in engine validation or analysis, it 
    will be assigned a unique engine id number. That number will be used from
    then on for all validation/analysis, making element ids from these sources
    the same as new validation/analysis runs are made.
  * As a user convenience, the engine IDs of net elements will appear as tooltips
    when the designer hovers their mouse over those elements.  As task decorators can
    be somewhat visually ambiguous at times, the type of decorator(s)
    present will also appear on the tooltip.
  * Fixed a bug where the Done button was not becomming active when the 
    ``Update Parameter'' dialog first appears even if the parameter had its 
    required information.
  * There are now two new menu items on the ``View'' menu that allows the 
    workflow designer to iconify all nets at once, or show (deiconify) them.
  * The editor now remembers its screen bounds at save time, and will 
    resize/reposition to those bounds when opening the file.
  * Fixed a bug where copying a number of elements and then pasting the 
    copies into the same net would delete valid flows.
  * Fixed a bug where undo/redo behaviour became broken when pasting 
    elements copy/cut previously.
  * Enhanced the editor so it will now automatically generate task variables
    from a running engine when a workflow designer selects an automated task
    for the task's decomposition.
  * Fixed a bug where a sub-net's local variables could be used to pass data 
    to an outer net's variables (a misunderstanding of what's needed from the editor).
  * Fixed a bug where a task could not assign data to a net's output variable.
  * Added an "About the editor" dialog off the Help menu, listing external libraries
    used and compatibility concerns.
  * Fixed a bug where having spaces within the filepath of the editor would
    cause XMLSchema validation errors.
  * The frame icons of nets will now visibly differentiate between the starting
    net (marked by an input condition icon), and its subnets 
    (marked by composite task icons).
  * Undoable events now bring the appropriate net for the change to the foreground 
    as its being undone/redone. Some edits span several nets, so a "home" net is 
    chosen for these changes.
  * Fixed bugs where user-defined enumerated types (which are simple in XMLSchema) 
    were being treated as complex types.
  * Altered the Parameter Update dialog to a) hilight that the target variable element
    tags are automatically being supplied for the designer when writing their queries,
    b) give them full control of the XQuery expression internals they can pass to the engine,
    and c) two XQuery buttons to generate XQuery expressions for variables that return
    the entire variable element and it's contents, or just the content without the
    variable element tags.
  * Fixed a bug where viewable cancellation sets were nore being redisplayed when the
    editor next opens a specification.
  * Now, when closing a specification, the editor prompts workflow designers for whether
    they want to save the specification or not, istead of automatically saving the 
    specification. 

Version 1.2 (22/05/2005) "HermeticMemeticDisorder"
  * Stopped the editor from quoting double (") and single quote (') characters in
    XQuery exports to the engine. Double quote characters cause problems in the 
    engine when they're not quoted (exceptions raised), and when they ARE quoted 
    (produce &amp;quot; instead of &quot;).  
  * Related to the above, XPath and XQuery expression editors will not allow users
    to type in (") characters. Text literals in these expressions should use the (')
    character only.
  * Fixed a bug where pressing the XQuery button on a parameter update dialog
    would not enable the Done button, even though all the data needed for 
    allowing the button tobe enabled was supplied.
  * Built in integrated support for a utility called wofyawl, which allows 
    users to analyse their specifications for things like invalid flows and
    cancellation set members. The tool can be configured from the "Tools"
    menu item (see below).
  * The old "Tools" menu has been renamed "Elements".
  * The "Engine" menu has been renamed "Tools", and this will be the new home 
    for setting up interfacing into all external tools the editor relies on.
  * Fixed a bug where the specification ID of an exported specification 
    contained spaces if the filename of the editor file had spaces. Spaces
    in the specification Id causes engine problems.
  * Decomposition dialogs now resize dynamically to match decomposition 
    variables.
  * The Update Parameter dialog now shows net and task variables as a
    user convenience.
  * Fixed a bug where cutting elements out of a net would result in 
    illegal orphaned flows.
  * Fixed a bug where exceptions were being thrown on cut actions.
  * Made a change to Palette buttons and some toolbar menu items 
    so when they're disabled, they offer advice on what's needed to enable them.
  * Moving selected elements in a net is now with arrow key-presses (instead of
    <ALT-arrow key>) to make it match user intuition more closely.
  * The "Save Specification As" menu item no longer has a hotkey of CTRL-A. CTRL-A
    instead, selects all elements of the current net with input focus.

Version 1.1-1 (28/02/2005) "Paraselsus"
  * Validation is now displayed in a split pane buried in the editor proper, 
    instead of being a floating dialog.
  * Fixed a bug where copying/cutting and then pasting elements in a currently
    viewed cancelleation set would have the pasted elements rendered as if 
    they were still in the cancellation set.
  * Fixed a bug where clicking the ``Done'' button when focus was in a 
    Decomposition label field would have the first button press ignored. 
    Similarly for variable name fields and their "Done" buttons.
  * Changing decomposition labels will now automatically propogate the change
    to parameter XQueries and split predicates that use the changed decomposition.
  * Changing variable names will now automatically propogate the change to 
    parameter XQueries and split predicates that used the changed variable name.
  * Net additions and deletions are now undoable edits. 
  * Made the editor validation code ignore unregistered service errors returned 
    from engine validation. 
  * Fixed a thread synchronisation bug where a user could force a double-save
    of a specification. This had several nasty side effects, including 
    corrupting save files, the dropping of a nasty exception, and the hanging 
    of the editor on trying to load a corrupted save file.
  * The parameter update dialog now disables the "Done" button whenever the 
    XQuery editor contains no text or there is no output variable for the query.
  * Resizing a net no longer causes a repositioning of the viewport into the nets.  
    It's an irritant for users drawing large nets.
  * Added an Anti-Alias toggle menu item to the view menu. Large nets render 
    slowly with anti-aliasing on.
  * Added a "Show grids in diagrams" menu item under the View menu. Again, 
    this was needed as a speed enhancement for people drawing large nets.
  * Refactored Ant build script to minimise the work required to produce new 
    releases of the editor.
  * Changed color of the progress bars to make them stand out more.

Version 1.1 (04/02/2005): "Trimagistrum"
  * Fixed a bug where deleting a task who's cancellation 
    set is being viewed fails to change the color of its 
    cancellation set members back to normal.
  * The data perspective is now supported by the editor. Specifically:
    * XMLSchema can be used to describe complex types of variables.
    * Variables can be set for nets and tasks. 
    * XQuery parameter expressions trasform state betwen net and task variables.
    * OR/XOR Splits now use XPath boolean predicates to select which flows to use.
    * Multiple-Instance tasks use XQuery expression for task splitting/aggregation.
  * You can now print entire specifications.
  * The editor can connect to running engines, and allow users to build 
    specifications using the actual services registered with that engine.
  * Users can change the label size on net elements.

Version 1.0 (18/05/2004): "Hermes"
  * Base Release
