<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.yawl.fit.qut.edu.au/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="Beta 7.1"
	xsi:schemaLocation="http://www.yawl.fit.qut.edu.au/ YAWL_SchemaBeta7.1.xsd">
	<specification uri="TaskDecomposesToNetSpec.xml">
		<documentation>Spec with an atomic task that decomposes to a net, which should cause an error</documentation>
		<metaData/>
		<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
		<decomposition id="OverseeMusic" isRootNet="true" xsi:type="NetFactsType">
			<name>Oversee Music</name>
			<documentation></documentation>
			<processControlElements>
				<inputCondition id="input">
					<flowsInto>
						<nextElementRef id="decideName"/>
					</flowsInto>
				</inputCondition>
				<task id="decideName">
					<flowsInto>
						<nextElementRef id="finis"/>
					</flowsInto>
					<join code="and"/>
					<split code="and"/>
					<!-- this decomposition gets changed by java code to point to leaf-c -->
					<decomposesTo id="G"/>
				</task>
				<outputCondition id="finis">
					<name>Finished case</name>
				</outputCondition>
			</processControlElements>
		</decomposition>
		<decomposition id="E" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="F" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="G" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="H" xsi:type="WebServiceGatewayFactsType"/>
		<decomposition id="leaf-c" xsi:type="NetFactsType">
			<processControlElements>
				<inputCondition id="i-leaf-c">
					<name>i</name>
					<flowsInto>
						<nextElementRef id="e-leaf-c"/>
					</flowsInto>
				</inputCondition>
				<task id="e-leaf-c">
					<flowsInto>
						<nextElementRef id="f-leaf-c"/>
						<predicate>true()</predicate>
						<isDefaultFlow/>
					</flowsInto>
					<flowsInto>
						<nextElementRef id="g-leaf-c"/>
						<predicate>true()</predicate>
					</flowsInto>
					<join code="xor"/>
					<split code="or"/>
					<decomposesTo id="E"/>
				</task>
				<task id="f-leaf-c">
					<flowsInto>
						<nextElementRef id="h-leaf-c"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<decomposesTo id="F"/>
				</task>
				<task id="g-leaf-c">
					<flowsInto>
						<nextElementRef id="h-leaf-c"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<decomposesTo id="G"/>
				</task>
				<task id="h-leaf-c">
					<flowsInto>
						<nextElementRef id="o-leaf-c"/>
					</flowsInto>
					<join code="or"/>
					<split code="and"/>
					<decomposesTo id="H"/>
				</task>
				<outputCondition id="o-leaf-c">
					<name>o</name>
				</outputCondition>
			</processControlElements>
		</decomposition>
	</specification>
</specificationSet>