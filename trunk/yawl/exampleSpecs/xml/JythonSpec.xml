<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.citi.qut.edu.au/yawl"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="Beta 7.1"
	xsi:schemaLocation="http://www.citi.qut.edu.au/yawl YAWL_SchemaBeta7.1.xsd">
	<specification uri="JythonSpec2.xml">
		<name>JythonSpec</name>
		<documentation>An example of how to use the Jython Service. This specification is
		               tailored to how the Jython Service is implemented so far and will
		               change as the Jython Service is being implemented.
		               The most obvious change upcoming is the removal of the @nl; hack
		               to handle newlines.</documentation>
		<metaData/>
		<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
		<decomposition id="RootDecomp" isRootNet="true" xsi:type="NetFactsType">
			<localVariable>
				<name>code</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue>
print 3.14
				</initialValue>
			</localVariable>
			<localVariable>
				<name>output</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue/>
			</localVariable>
			<localVariable>
				<name>error</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue/>
			</localVariable>
			<localVariable>
				<name>vars</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue></initialValue>
			</localVariable>
			<localVariable>
				<name>var2</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue>
print 'the value of foo is:'@nl;
print foo@nl;
foo = 3@nl;
print foo@nl;
print 'in1 and in2 are:'@nl;
print in1@nl;
print in2@nl;
dynamicout = in1 %2B in2@nl;
print dynamicout@nl;
				</initialValue>
			</localVariable>
			<localVariable>
				<name>foo</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue>24</initialValue>
			</localVariable>
			<localVariable>
				<name>in1</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue>15</initialValue>
			</localVariable>
			<localVariable>
				<name>in2</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue>26</initialValue>
			</localVariable>
			<localVariable>
				<name>dynamicout</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<initialValue>blah</initialValue>
			</localVariable>
			<processControlElements>
				<inputCondition id="input">
					<flowsInto>
						<nextElementRef id="one"/>
					</flowsInto>
				</inputCondition>
				<task id="one">
					<flowsInto>
						<nextElementRef id="two"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<startingMappings>
						<mapping>
							<expression query="&lt;code&gt; { /RootDecomp/var2/text() } &lt;/code&gt;"/>
							<mapsTo>code</mapsTo>
						</mapping>
						<mapping>
							<expression query="/RootDecomp/output"/>
							<mapsTo>output</mapsTo>
						</mapping>
						<mapping>
							<expression query="/RootDecomp/error"/>
							<mapsTo>error</mapsTo>
						</mapping>
						<mapping>
							<expression query="
								&lt;vars&gt;
								&amp;lt;root&amp;gt;
									&amp;lt;foo&amp;gt; { /RootDecomp/foo/text() } &amp;lt;/foo&amp;gt;
									&amp;lt;in1&amp;gt; { /RootDecomp/in1/text() } &amp;lt;/in1&amp;gt;
									&amp;lt;in2&amp;gt; { /RootDecomp/in2/text() } &amp;lt;/in2&amp;gt;
									&amp;lt;dynamicout/&gt;
								&amp;lt;/root&amp;gt;
								&lt;/vars&gt;"/>
							<mapsTo>vars</mapsTo>
						</mapping>
						<mapping>
							<expression query="&lt;YawlWSInvokerWSDLLocation&gt;http://localhost:8080/JythonService/services/JythonService?wsdl&lt;/YawlWSInvokerWSDLLocation&gt;"/>
							<mapsTo>YawlWSInvokerWSDLLocation</mapsTo>
						</mapping>
						<mapping>
							<expression query="&lt;YawlWSInvokerOperationName&gt;execute&lt;/YawlWSInvokerOperationName&gt;"/>
							<mapsTo>YawlWSInvokerOperationName</mapsTo>
						</mapping>
						<mapping>
							<expression query="&lt;YawlWSInvokerPortName&gt;JythonServiceHttpPort&lt;/YawlWSInvokerPortName&gt;"/>
							<mapsTo>YawlWSInvokerPortName</mapsTo>
						</mapping>
					</startingMappings>
					<completedMappings>
						<mapping>
							<expression query="/DecompOne/code"/>
							<mapsTo>code</mapsTo>
						</mapping>
						<mapping>
							<expression query="/DecompOne/output"/>
							<mapsTo>output</mapsTo>
						</mapping>
						<mapping>
							<expression query="/DecompOne/error"/>
							<mapsTo>error</mapsTo>
						</mapping>
						<mapping>
							<expression query="/DecompOne/foo"/>
							<mapsTo>foo</mapsTo>
						</mapping>
						<mapping>
							<expression query="/DecompOne/dynamicout"/>
							<mapsTo>dynamicout</mapsTo>
						</mapping>
					</completedMappings>
					<decomposesTo id="DecompOne"/>
				</task>
				<task id="two">
					<flowsInto>
						<nextElementRef id="three"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<startingMappings>
						<mapping>
							<expression query="/RootDecomp/code"/>
							<mapsTo>code</mapsTo>
						</mapping>
						<mapping>
							<expression query="/RootDecomp/output"/>
							<mapsTo>output</mapsTo>
						</mapping>
						<mapping>
							<expression query="/RootDecomp/error"/>
							<mapsTo>error</mapsTo>
						</mapping>
						<mapping>
							<expression query="/RootDecomp/foo"/>
							<mapsTo>foo</mapsTo>
						</mapping>
						<mapping>
							<expression query="/RootDecomp/dynamicout"/>
							<mapsTo>dynamicout</mapsTo>
						</mapping>
					</startingMappings>
					<decomposesTo id="DecompTwo"/>
				</task>
				<task id="three">
					<flowsInto>
						<nextElementRef id="finis"/>
					</flowsInto>
					<join code="xor"/>
					<split code="and"/>
					<decomposesTo id="DecompThree"/>
				</task>
				<outputCondition id="finis">
					<name>Finished case</name>
				</outputCondition>
			</processControlElements>
		</decomposition>
		<decomposition id="DecompOne" xsi:type="WebServiceGatewayFactsType">
			<inputParam>
				<name>code</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>output</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>error</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>vars</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>YawlWSInvokerWSDLLocation</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>YawlWSInvokerOperationName</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>YawlWSInvokerPortName</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<outputParam>
				<name>output</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<mandatory/>
			</outputParam>
			<outputParam>
				<name>code</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<mandatory/>
			</outputParam>
			<outputParam>
				<name>error</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<mandatory/>
			</outputParam>
			<outputParam>
				<name>foo</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<mandatory/>
			</outputParam>
			<outputParam>
				<name>dynamicout</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
				<mandatory/>
			</outputParam>
			<yawlService id="http://localhost:8080/yawlWSInvoker/"/>
		</decomposition>
		<decomposition id="DecompTwo" xsi:type="WebServiceGatewayFactsType">
			<inputParam>
				<name>code</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>output</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>error</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>foo</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
			<inputParam>
				<name>dynamicout</name>
				<type>string</type>
				<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			</inputParam>
		</decomposition>
		<decomposition id="DecompThree" xsi:type="WebServiceGatewayFactsType"/>
	</specification>
</specificationSet>