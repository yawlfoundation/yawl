<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <bean id="memoryDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
         <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
         <property name="url" value="jdbc:hsqldb:mem:openjms" />
         <property name="username" value="sa" />
         <property name="password" value="" />
    </bean>

    <bean id="postgresDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
         <property name="driverClassName" value="org.postgresql.Driver" />
         <property name="url" value="jdbc:postgresql:yawl" />
         <property name="username" value="postgres" />
         <property name="password" value="admin" />
    </bean>

<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

        <property name="dataSource" ref="memoryDataSource" />
<!--
        <property name="dataSource" ref="postgresDataSource" />
-->
        <property name="hibernateProperties">
            <props>

                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>

<!--
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
-->
<!--
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>		
-->
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>                 
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>au.edu.qut.yawl.engine.YNetRunner</value>
                <value>au.edu.qut.yawl.elements.YNet</value>
                <value>au.edu.qut.yawl.engine.domain.YWorkItem</value>
                <value>au.edu.qut.yawl.engine.domain.YWorkItemID</value>
                <value>au.edu.qut.yawl.elements.state.YIdentifier</value>
                <value>au.edu.qut.yawl.elements.YInputCondition</value>
                <value>au.edu.qut.yawl.elements.YOutputCondition</value>
                <value>au.edu.qut.yawl.elements.YCompositeTask</value>
                <value>au.edu.qut.yawl.elements.YAtomicTask</value>
                <value>au.edu.qut.yawl.elements.YTask</value>
                <value>au.edu.qut.yawl.elements.YCondition</value>
                <value>au.edu.qut.yawl.elements.YExternalNetElement</value>
                <value>au.edu.qut.yawl.elements.YSpecification</value>
                <value>au.edu.qut.yawl.elements.SpecVersion</value>
                <value>au.edu.qut.yawl.elements.YDecomposition</value>
                <value>au.edu.qut.yawl.elements.YFlow</value>
                <value>au.edu.qut.yawl.elements.YDecomposition</value>
                <value>au.edu.qut.yawl.elements.YMultiInstanceAttributes</value>
                <value>au.edu.qut.yawl.elements.YAWLServiceReference</value>
                <value>au.edu.qut.yawl.elements.YAWLServiceGateway</value>
                <value>au.edu.qut.yawl.engine.domain.YCaseData</value>
                <value>au.edu.qut.yawl.elements.data.YVariable</value>
                <value>au.edu.qut.yawl.elements.data.YParameter</value>
                <value>au.edu.qut.yawl.elements.YMetaData</value>
                <value>au.edu.qut.yawl.elements.KeyValue</value>
                <value>au.edu.qut.yawl.elements.state.IdentifierSequence</value>
		<value>au.edu.qut.yawl.elements.state.YInternalCondition</value>
		<value>au.edu.qut.yawl.events.Event</value>
		<value>au.edu.qut.yawl.events.YWorkItemEvent</value>
		<value>au.edu.qut.yawl.events.YCaseEvent</value>
		<value>au.edu.qut.yawl.events.YDataEvent</value>
		<value>au.edu.qut.yawl.events.YErrorEvent</value>
            </list>
        </property>
</bean>


<bean id="hsqlDao" class="au.edu.qut.yawl.persistence.dao.DelegatedCustomSpringDAO">
	<property name="transactionManager">
		<ref local="transactionManager"/>
	</property>
</bean>

<bean id="postgresDao" class="au.edu.qut.yawl.persistence.dao.DelegatedCustomSpringDAO">
	<property name="transactionManager">
		<ref local="transactionManager"/>
	</property>
</bean>

<bean id="daoFactory" class="au.edu.qut.yawl.persistence.dao.DAOFactory">
	<property name="daoMap">
		<map>
			<entry key="hsql"><ref local="hsqlDao"/></entry>
			<entry key="postgres"><ref local="postgresDao"/></entry>
		</map>
	</property>
</bean>

<bean id="EngineBean" class="au.edu.qut.yawl.engine.YEngine">
	<property name="dao">
    	<ref local="hsqlDao"/>
	</property>
</bean>

<bean id="commandStack" class="com.nexusbpm.command.CommandStack">
</bean>

<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
<bean id="transactionManager"
	class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="sessionFactory">
    	<ref local="sessionFactory"/>
	</property>
</bean>

<aop:config>
     <aop:pointcut id="serviceOperation"
         expression="execution(* com.nexusbpm.command.CommandStack.*(..))"/>
     <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/>
</aop:config>

  <tx:advice id="txAdvice">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <tx:method name="*Command" />
    </tx:attributes>
  </tx:advice>

<!-- END DB-RELATED BEANS -->

	<bean id="yawlEngineDao" 
		class="au.edu.qut.yawl.persistence.dao.YawlEngineDAO">
	</bean>
	<bean id="jmsClient" 
		class="com.nexusbpm.editor.util.JmsClient">
	</bean>

	<bean id="quartzEventDataSourceFactory" class="com.nexusbpm.scheduler.QuartzEventDataSourceFactory">
		<property name="rmiHost" value="${org.quartz.scheduler.rmi.registryHost}" />
		<property name="rmiPort" value="${org.quartz.scheduler.rmi.registryPort}" />
	</bean>

	<bean id="schedulerFactory" class="org.quartz.impl.StdSchedulerFactory">
  		<constructor-arg index="0" ref="properties" />
  	</bean>

	<bean id="propertyConfigurer" 
		class="au.edu.qut.yawl.util.configuration.UpdateablePropertiesFactoryBean">
		<property name="location" value="classpath:${yawl.environment.propertyfilename}" />
		<property name="ignoreInvalidKeys" value="true" />
	</bean>

	<bean id="standardPropertyConfigurer" 
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:${yawl.environment.propertyfilename}" />
	</bean>

	<bean id="properties" 
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:${yawl.environment.propertyfilename}" />
	</bean>
</beans>