<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">



    <bean id="memoryDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
         <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
         <property name="url" value="jdbc:hsqldb:mem:yawl" />
         <property name="username" value="sa" />
         <property name="password" value="" />
    </bean>

    <bean id="postgresDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
         <property name="driverClassName" value="org.postgresql.Driver" />
         <property name="url" value="jdbc:postgresql:yawl" />
         <property name="username" value="postgres" />
         <property name="password" value="admin" />
    </bean>



<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

        <property name="dataSource" ref="postgresDataSource" />
<!--
        <property name="dataSource" ref="memoryDataSource" />
-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
<!--
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
-->
<!--
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>		
-->

                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>                 
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>au.edu.qut.yawl.exceptions.Problem</value>
                <value>au.edu.qut.yawl.elements.YAWLServiceReference</value>
                <value>au.edu.qut.yawl.elements.state.YIdentifier</value>
                <value>au.edu.qut.yawl.elements.state.IdentifierSequence</value>
		    <value>au.edu.qut.yawl.elements.state.YInternalCondition</value>
  		    <value>au.edu.qut.yawl.elements.state.YIdentifierBag</value>
                <value>au.edu.qut.yawl.elements.YNet</value>
                <value>au.edu.qut.yawl.elements.YInputCondition</value>
                <value>au.edu.qut.yawl.elements.YOutputCondition</value>
                <value>au.edu.qut.yawl.elements.YCompositeTask</value>
                <value>au.edu.qut.yawl.elements.YAtomicTask</value>
                <value>au.edu.qut.yawl.elements.YCondition</value>
                <value>au.edu.qut.yawl.elements.YExternalNetElement</value>
                <value>au.edu.qut.yawl.elements.YSpecification</value>
                <value>au.edu.qut.yawl.elements.SpecVersion</value>
                <value>au.edu.qut.yawl.elements.YDecomposition</value>
                <value>au.edu.qut.yawl.elements.YFlow</value>
                <value>au.edu.qut.yawl.elements.data.YVariable</value>
                <value>au.edu.qut.yawl.elements.data.YParameter</value>
                <value>au.edu.qut.yawl.elements.YMetaData</value>
                <value>au.edu.qut.yawl.elements.KeyValue</value>
                <value>au.edu.qut.yawl.elements.YMultiInstanceAttributes</value>
                <value>au.edu.qut.yawl.elements.YAWLServiceGateway</value>
                <value>au.edu.qut.yawl.elements.YTask</value>
                <value>au.edu.qut.yawl.engine.domain.YCaseData</value>
                <value>au.edu.qut.yawl.engine.domain.YWorkItem</value>
                <value>au.edu.qut.yawl.engine.domain.YWorkItemID</value>
                <value>au.edu.qut.yawl.engine.YNetRunner</value>
		    <value>au.edu.qut.yawl.events.Event</value>
			<value>au.edu.qut.yawl.events.YWorkItemEvent</value>
			<value>au.edu.qut.yawl.events.YCaseEvent</value>
			<value>au.edu.qut.yawl.events.YDataEvent</value>
			<value>au.edu.qut.yawl.events.YErrorEvent</value>
                <value>au.edu.qut.yawl.elements.YDecomposition</value>
			<value>au.edu.qut.yawl.admintool.model.HumanResource</value>
			<value>au.edu.qut.yawl.admintool.model.Resource</value>
			<value>au.edu.qut.yawl.util.MultiInstanceDataList</value>
			<value>au.edu.qut.yawl.util.MultiInstanceData</value>
</list>
        </property>
</bean>

<bean id="hsqlDao" class="au.edu.qut.yawl.persistence.dao.DelegatedSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>

<!--
	<property name="transactionManager">
		<ref local="transactionManager"/>
	</property>
-->

<bean id="daoFactory" class="au.edu.qut.yawl.persistence.dao.DAOFactory">
	<property name="daoMap">
		<map>
			<entry key="hsql"><ref local="hsqlDao"/></entry>
		</map>
	</property>
</bean>

<bean id="EngineBean" class="au.edu.qut.yawl.engine.YEngine">
	<property name="dao">
    	<ref local="hsqlDao"/>
	</property>
</bean>

<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
<bean id="transactionManager"
	class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="sessionFactory">
    	<ref local="sessionFactory"/>
	</property>
</bean>

<!--
<bean id="loggerAspect" class="au.edu.qut.yawl.util.SimpleLogger"/>
<aop:config>
     <aop:aspect ref="loggerAspect">
         <aop:pointcut id="EnginePointcut"
          expression="execution(* au.edu.qut.yawl.persistence.dao.DAO.*(..))"/>
         <aop:around pointcut-ref="EnginePointcut" method="log"/>
      </aop:aspect>
</aop:config>
-->

<aop:config>
     <aop:pointcut id="serviceOperation"
                 expression="execution(* au.edu.qut.yawl.engine.YEngine.*(..))"/>
     <aop:pointcut id="abstractServiceOperation"
                 expression="execution(* au.edu.qut.yawl.engine.AbstractEngine.*(..))"/>

     <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/>

     <aop:advisor pointcut-ref="abstractServiceOperation" advice-ref="txAdvice"/>

</aop:config>

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="get*" />
      <tx:method name="create*" />
      <tx:method name="finish*" />
      <tx:method name="cancel*" />
      <tx:method name="launch*" />
      <tx:method name="start*" />
      <tx:method name="complete*" />
      <tx:method name="add*" />
      <tx:method name="unload*" />
      <tx:method name="remove*" />
      <tx:method name="suspend*" />
      <tx:method name="unsuspend*" />
      <tx:method name="rollback*" />
      <tx:method name="update*" />
      <tx:method name="init*" />
    </tx:attributes>
  </tx:advice>

<bean id="EventLogger" class="au.edu.qut.yawl.events.YawlEventLogger">
    <property name="dispatchers">
        <list>
            <ref bean="HibernateEventDispatcher"/>
            <ref bean="JMSEventDispatcher"/>
        </list>
    </property>
</bean>
<bean id="HibernateEventDispatcher" class="au.edu.qut.yawl.events.HibernateEventDispatcher">
</bean>
<bean id="JMSEventDispatcher" class="au.edu.qut.yawl.events.JMSEventDispatcher">
</bean>

</beans>