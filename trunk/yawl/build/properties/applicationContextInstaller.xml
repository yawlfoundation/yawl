<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

${dbtype}



<!-- 
 This bean identifies which methods in the engine will be transactional 
 It should cover all methods which modify engine state, but exclude any
 read-only operations   
-->
<bean id="YAWLInterceptionAdvice" 
    class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
    <property name="advice">
        <ref local="YAWLTransactionAdvice"/>
    </property>
    <property name="patterns">
        <list>
            <value>.*create.*</value>
            <value>.*cancel.*</value>
            <value>.*launch.*</value>
            <value>.*start.*</value>
            <value>.*complete.*</value>
            <value>.*add.*</value>
            <value>.*unload.*</value>
            <value>.*remove.*</value>
            <value>.*suspend.*</value>
            <value>.*unsuspend.*</value>
            <value>.*rollback.*</value>
            <value>.*update.*</value>
	    <value>.*init.*</value>
        </list>
    </property>
</bean>


<bean id="EngineInterceptor2" 
    class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="proxyInterfaces"><value>au.edu.qut.yawl.engine.YEngineInterface</value></property>
    <property name="target"><ref local="EngineBean"/></property>
    <property name="interceptorNames">
        <list>
            <value>YAWLInterceptionAdvice</value>
        </list>
    </property>
</bean>

<bean id="YAWLTransactionAdvice" class="au.edu.qut.yawl.persistence.YAWLTransactionAdvice">
    <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>

<bean id="EngineBean" class="au.edu.qut.yawl.engine.YEngine">
</bean>

<bean id="EventLogger" class="au.edu.qut.yawl.events.YawlEventLogger">
    <property name="dispatchers">
        <list>
            <ref bean="HibernateEventDispatcher"/>
        </list>
    </property>
</bean>
<bean id="HibernateEventDispatcher" class="au.edu.qut.yawl.events.HibernateEventDispatcher">
</bean>



<!--

<bean id="SpecSpringDAO" class="au.edu.qut.yawl.persistence.dao.SpecificationSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>
<bean id="RunnerSpringDAO" class="au.edu.qut.yawl.persistence.dao.NetRunnerSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>
<bean id="ProblemSpringDAO" class="au.edu.qut.yawl.persistence.dao.ProblemSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>
<bean id="WorkItemSpringDAO" class="au.edu.qut.yawl.persistence.dao.WorkItemSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>
<bean id="IdentifierSpringDAO" class="au.edu.qut.yawl.persistence.dao.IdentifierSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>
<bean id="ServiceRefSpringDAO" class="au.edu.qut.yawl.persistence.dao.YAWLServiceReferenceSpringDAO">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>

<bean id="MyTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
 <property name="sessionFactory"><ref local="sessionFactory"/></property>
</bean>


<bean id="EngineInterceptor" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
   <property name="transactionManager"><ref bean="MyTransactionManager"/></property>
   <property name="target" ref="EngineBean"></property>
   <property name="transactionAttributes">
      <props>
         <prop key="*">PROPAGATION_REQUIRED, -YPersistenceException </prop>
      </props>
   </property>
</bean>
-->



</beans>