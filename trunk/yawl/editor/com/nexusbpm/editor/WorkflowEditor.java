package com.nexusbpm.editor;

import javax.swing.JFrame;
import javax.swing.UIManager;

import au.edu.qut.yawl.persistence.dao.DAOFactory;
import au.edu.qut.yawl.persistence.dao.SpecificationDAO;
import au.edu.qut.yawl.persistence.managed.DataContext;

import com.nexusbpm.editor.icon.ApplicationIcon;
import com.nexusbpm.editor.logger.CapselaLogPanel;
import com.nexusbpm.editor.persistence.EditorDataProxy;
import com.nexusbpm.editor.tree.DatasourceRoot;
import com.nexusbpm.editor.tree.STree;
import com.nexusbpm.editor.tree.SharedNode;
import com.nexusbpm.editor.tree.SharedNodeTreeModel;

/**
 *
 * @author  SandozM
 */
public class WorkflowEditor extends javax.swing.JFrame {
    
	private final static int DEFAULT_CLIENT_WIDTH = 800;
	private final static int DEFAULT_CLIENT_HEIGHT = 692;

	private static WorkflowEditor singleton = null;
	
    /**
     * Creates new form WorkflowEditor 
     */
    private WorkflowEditor() {
        initComponents();
        this.pack();
    	this.setSize(DEFAULT_CLIENT_WIDTH,DEFAULT_CLIENT_HEIGHT);
    }
    
    public static WorkflowEditor getInstance() {
    	if (WorkflowEditor.singleton == null) {
    		WorkflowEditor.singleton = new WorkflowEditor();
    	}
    	return singleton;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
	    JFrame.setDefaultLookAndFeelDecorated(true);
		try {
	        UIManager.setLookAndFeel(
	            UIManager.getSystemLookAndFeelClassName());
	    } catch (Exception e) { e.printStackTrace();}
        componentEditorSplitPane = new javax.swing.JSplitPane();
        componentListPanel = new javax.swing.JPanel();
        componentListScrollPane = new javax.swing.JScrollPane();
        SpecificationDAO dao = DAOFactory.getDAOFactory(DAOFactory.Type.FILE).getSpecificationModelDAO();
        DataContext dc = new DataContext(dao, EditorDataProxy.class);
        EditorDataProxy dp = (EditorDataProxy) dc.getDataProxy(new DatasourceRoot("./exampleSpecs"), null);
        SharedNode root = new SharedNode(dp);
        SharedNodeTreeModel treeModel = new SharedNodeTreeModel(root);
        root.setTreeModel(treeModel);
        componentListTree = new STree(treeModel, componentListScrollPane);
        componentListTree.setShowsRootHandles(true);
        componentListTree.setRootVisible(true);
        componentListTree.setRowHeight(-1);
        
        desktopAndStatusPanel = new javax.swing.JPanel();
        desktopLogSplitPane = new javax.swing.JSplitPane();
        desktopPanel = new javax.swing.JPanel();
        desktopScrollPane = new javax.swing.JScrollPane();
        desktopPane = new javax.swing.JDesktopPane();
        logPanel = new CapselaLogPanel();
        logTextScrollPane = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Workflow Editor");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.lightGray);
        setName("Workflow Editor");
        this.setIconImage(ApplicationIcon.getIcon("CapselaFrame.window_icon", ApplicationIcon.HUGE_SIZE).getImage());
        componentEditorSplitPane.setDividerLocation(200);
        componentListPanel.setLayout(new java.awt.BorderLayout());

        componentListScrollPane.setMinimumSize(new java.awt.Dimension(0, 0));
        componentListTree.setPreferredSize(null);
        componentListScrollPane.setViewportView(componentListTree);

        componentListPanel.add(componentListScrollPane, java.awt.BorderLayout.CENTER);

        componentEditorSplitPane.setLeftComponent(componentListPanel);

        desktopAndStatusPanel.setLayout(new java.awt.GridLayout(1, 0));

        desktopLogSplitPane.setDividerLocation(480);
        desktopLogSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        desktopLogSplitPane.setRequestFocusEnabled(false);
        desktopPanel.setLayout(new java.awt.GridLayout(1, 0));

        desktopPane.setBackground(new java.awt.Color(135, 145, 161));
        desktopScrollPane.setViewportView(desktopPane);

        desktopPanel.add(desktopScrollPane);

        desktopLogSplitPane.setTopComponent(desktopPanel);

        desktopLogSplitPane.setBottomComponent(logPanel);

        desktopAndStatusPanel.add(desktopLogSplitPane);

        componentEditorSplitPane.setRightComponent(desktopAndStatusPanel);

        getContentPane().add(componentEditorSplitPane, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Save As ...");
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setText("Help");
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }
    // </editor-fold>                        

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        System.exit(0);
    }                                            
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
                new WorkflowEditor().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JSplitPane componentEditorSplitPane;
    private javax.swing.JPanel componentListPanel;
    private javax.swing.JScrollPane componentListScrollPane;
    private javax.swing.JTree componentListTree;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JPanel desktopAndStatusPanel;
    private javax.swing.JSplitPane desktopLogSplitPane;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JPanel desktopPanel;
    private javax.swing.JScrollPane desktopScrollPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private CapselaLogPanel logPanel;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JScrollPane logTextScrollPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration                   
    
}
