ALTER TABLE QRTZ_JOB_DETAILS ADD (
  PRIMARY KEY
  (JOB_NAME, JOB_GROUP));
ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  PRIMARY KEY
  (JOB_NAME, JOB_GROUP, JOB_LISTENER));
ALTER TABLE QRTZ_TRIGGERS ADD (
  PRIMARY KEY
  (TRIGGER_NAME, TRIGGER_GROUP));
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  PRIMARY KEY
  (TRIGGER_NAME, TRIGGER_GROUP));
ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  PRIMARY KEY
  (TRIGGER_NAME, TRIGGER_GROUP));
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD (
  PRIMARY KEY
  (TRIGGER_NAME, TRIGGER_GROUP));
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  PRIMARY KEY
  (TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_LISTENER));
ALTER TABLE QRTZ_CALENDARS ADD (
  PRIMARY KEY
  (CALENDAR_NAME));
ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD (
  PRIMARY KEY
  (TRIGGER_GROUP));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  PRIMARY KEY
  (ENTRY_ID));
ALTER TABLE QRTZ_SCHEDULER_STATE ADD (
  PRIMARY KEY
  (INSTANCE_NAME));
ALTER TABLE QRTZ_LOCKS ADD (
  PRIMARY KEY
  (LOCK_NAME));
ALTER TABLE UTILISATIONPLAN ADD (
  CONSTRAINT UTILISATIONPLAN_PK
  PRIMARY KEY
  (CASE_ID));

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
  REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));
ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
  REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
  REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
  REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP));
ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  FOREIGN KEY (JOB_NAME, JOB_GROUP) 
  REFERENCES QRTZ_JOB_DETAILS (JOB_NAME,JOB_GROUP));
ALTER TABLE QRTZ_TRIGGERS ADD (
  FOREIGN KEY (JOB_NAME, JOB_GROUP) 
  REFERENCES QRTZ_JOB_DETAILS (JOB_NAME,JOB_GROUP));
  
ALTER TABLE MAPPING ADD (
  CHECK ("WORKITEMID" IS NOT NULL));
ALTER TABLE MAPPING ADD (
  CHECK ("ISLOCKED" IS NOT NULL));
ALTER TABLE UTILISATIONPLAN ADD (
  CHECK ("CASE_ID" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("JOB_NAME" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("JOB_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("JOB_CLASS_NAME" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("IS_DURABLE" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("IS_VOLATILE" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("IS_STATEFUL" IS NOT NULL));
ALTER TABLE QRTZ_JOB_DETAILS ADD (
  CHECK ("REQUESTS_RECOVERY" IS NOT NULL));
ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  CHECK ("JOB_NAME" IS NOT NULL));
ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  CHECK ("JOB_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_JOB_LISTENERS ADD (
  CHECK ("JOB_LISTENER" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("TRIGGER_NAME" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("JOB_NAME" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("JOB_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("IS_VOLATILE" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("TRIGGER_STATE" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("TRIGGER_TYPE" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGERS ADD (
  CHECK ("START_TIME" IS NOT NULL));
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  CHECK ("TRIGGER_NAME" IS NOT NULL));
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  CHECK ("REPEAT_COUNT" IS NOT NULL));
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  CHECK ("REPEAT_INTERVAL" IS NOT NULL));
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD (
  CHECK ("TIMES_TRIGGERED" IS NOT NULL));
ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  CHECK ("TRIGGER_NAME" IS NOT NULL));
ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_CRON_TRIGGERS ADD (
  CHECK ("CRON_EXPRESSION" IS NOT NULL));
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD (
  CHECK ("TRIGGER_NAME" IS NOT NULL));
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  CHECK ("TRIGGER_NAME" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD (
  CHECK ("TRIGGER_LISTENER" IS NOT NULL));
ALTER TABLE QRTZ_CALENDARS ADD (
  CHECK ("CALENDAR_NAME" IS NOT NULL));
ALTER TABLE QRTZ_CALENDARS ADD (
  CHECK ("CALENDAR" IS NOT NULL));
ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("ENTRY_ID" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("TRIGGER_NAME" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("TRIGGER_GROUP" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("IS_VOLATILE" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("INSTANCE_NAME" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("FIRED_TIME" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("PRIORITY" IS NOT NULL));
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD (
  CHECK ("STATE" IS NOT NULL));
ALTER TABLE QRTZ_SCHEDULER_STATE ADD (
  CHECK ("INSTANCE_NAME" IS NOT NULL));
ALTER TABLE QRTZ_SCHEDULER_STATE ADD (
  CHECK ("LAST_CHECKIN_TIME" IS NOT NULL));
ALTER TABLE QRTZ_SCHEDULER_STATE ADD (
  CHECK ("CHECKIN_INTERVAL" IS NOT NULL));
ALTER TABLE QRTZ_LOCKS ADD (
  CHECK ("LOCK_NAME" IS NOT NULL));
