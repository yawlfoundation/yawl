<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<!-- General description of your web application -->
	<display-name>YAWL Engine</display-name>
	<description>
        This is the YAWL Workflow Engine.   It performs the execution of Workflow
        specifications (declared in XML), and it handles
        worklist, and application invokation.
        Author: Lachlan Aldred
        Date: 24/12/2003
        Time: 16:17:01
    </description>

	<!-- Context initialization parameters that define shared
         String constants used within your application.
    -->
	<context-param>
		<param-name>webmaster</param-name>
		<param-value>your.email.adress@your.domain</param-value>
		<description>
            The EMAIL address of the administrator to whom questions
            and comments about this application should be addressed.
        </description>
	</context-param>

	<context-param>
		<param-name>EnablePersistence</param-name>
		<param-value>true</param-value>
		<description>
			Set this value to 'true' to enable persistence and process logging.
			Set to 'false' to disable.
        </description>
	</context-param>

    <context-param>
        <param-name>EnableLogging</param-name>
        <param-value>true</param-value>
        <description>
            Process logging is enabled by default when persistence is enabled.
            Set this value to 'false' when persistence is enabled to disable
            process logging. If persistence is disabled, this param has no effect.
        </description>
    </context-param>

    <context-param>
        <param-name>DefaultWorklist</param-name>
        <param-value>http://localhost:8080/resourceService/ib#resource</param-value>
        <description>
            The URL and password (separated by a hash) of the default worklist handler
            (by default set to the Resource Service). This is the service that handles
            the tasks that are not associated with any other custom service.
        </description>
    </context-param>

    <context-param>
        <param-name>AllowGenericAdminID</param-name>
        <param-value>true</param-value>
        <description>
            When set to 'true', allows services and applications to connect to the
            YAWL engine using the generic administrator account 'admin', password 'YAWL'.
            When set to 'false', each connecting service and application
            must connect using a unique account previously registered with the engine.
        </description>
    </context-param>

    <context-param>
        <param-name>EnableHibernateStatisticsGathering</param-name>
        <param-value>true</param-value>
        <description>
            When set to 'true', the hibernate database layer will collect statistics of
            all operations for later perusal.
            When set to 'false', hibernate statistics collection is disabled.
        </description>
    </context-param>

    <context-param>
        <param-name>InitialisationAnnouncementTimeout</param-name>
        <param-value>5</param-value>
        <description>
            The maximum number of seconds the engine will spend trying to deliver an
            'EngineInitialisationCompleted' event to each registered service before
            giving up. The specified value should cover the period between the moment the
            engine has fully initialised and the moment the host server is ready to accept
            http connections.

            The value can be any positive integer. Defaults to 5 seconds if the value
            is missing or invalid.
        </description>
    </context-param>


	<context-param>
		<param-name>RMIServerName</param-name>
		<param-value>//localhost/EngineGateway</param-value>
		<description>
            The RMI registry name of the RMI gateway into the YAWL Engine.
        </description>
	</context-param>

    <!--<context-param>-->
        <!--<param-name>ObserverGateway</param-name>-->
        <!--<param-value></param-value>-->
        <!--<description>-->
            <!--The class name of an ObserverGateway implementation. Multiple-->
            <!--implementations can be separated with semi-colons ';'-->
        <!--</description>-->
    <!--</context-param>-->


    <context-param>
        <param-name>InterfaceXListener</param-name>
        <param-value>http://localhost:8080/costService/ix</param-value>
        <description>
            This value provides the URI of an Interface X listening service.
            Multiple uris can be specified, separated by semi-colons ';'
        </description>
    </context-param>

    <!--CharsetFilter -->

     <filter>
       <filter-name>CharsetFilter</filter-name>
       <filter-class>org.yawlfoundation.yawl.util.CharsetFilter</filter-class>
         <init-param>
           <param-name>requestEncoding</param-name>
           <param-value>UTF-8</param-value>
         </init-param>
     </filter>

     <filter-mapping>
       <filter-name>CharsetFilter</filter-name>
       <url-pattern>/*</url-pattern>
     </filter-mapping>
        

    <!-- Servlet definitions for the servlets that make up
         your web application, including initialization
         parameters.
    -->
	<servlet>
		<servlet-name>InterfaceBServlet</servlet-name>
		<description>
            Performs the necessary functionality to web-enable the YAWL
            engine.   It provides a REST based interface.
            It specifically provides access to the control and execution of
            cases in the workflow engine.
        </description>
		<servlet-class>
            org.yawlfoundation.yawl.engine.interfce.interfaceB.InterfaceB_EngineBasedServer
        </servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>InterfaceAServlet</servlet-name>
		<description>
            Performs the necessary functionality to web-enable the YAWL
            engine.   It provides a REST based interface.
            It specifically provides access to the management features of
            the workflow engine.
        </description>
		<servlet-class>
            org.yawlfoundation.yawl.engine.interfce.interfaceA.InterfaceA_EngineBasedServer
        </servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
    <servlet>
        <servlet-name>InterfaceXServlet</servlet-name>
        <description>
            This servlet provides access to the monitoring and management of
            process exceptions.
        </description>
        <servlet-class>
            org.yawlfoundation.yawl.engine.interfce.interfaceX.InterfaceX_EngineSideServer
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
	<servlet>
		<servlet-name>ErrorServlet</servlet-name>
		<description>
            Reports that the URI request found nothing, hence the error report.
        </description>
		<servlet-class>org.yawlfoundation.yawl.engine.interfce.ErrorServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
    <servlet>
        <servlet-name>InterfaceEGateway</servlet-name>
        <description>
            Provides an external API to the Engine's process event logs
        </description>
        <servlet-class>
            org.yawlfoundation.yawl.engine.interfce.interfaceE.YLogGateway
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Define mappings that are used by the servlet container to
         translate a particular request URI (context-relative) to a
         particular servlet.
    -->
	<servlet-mapping>
		<servlet-name>InterfaceAServlet</servlet-name>
		<url-pattern>/ia/*</url-pattern>
	</servlet-mapping>
  <servlet-mapping>
     <servlet-name>InterfaceBServlet</servlet-name>
     <url-pattern>/ib/*</url-pattern>
  </servlet-mapping>    
  <servlet-mapping>
    <servlet-name>InterfaceBServlet</servlet-name>
    <url-pattern>/work</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>InterfaceXServlet</servlet-name>
    <url-pattern>/ix/*</url-pattern>
  </servlet-mapping>
	<servlet-mapping>
		<servlet-name>ErrorServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
    <servlet-mapping>
        <servlet-name>InterfaceEGateway</servlet-name>
        <url-pattern>/logGateway</url-pattern>
    </servlet-mapping>
    <!-- Define the default session timeout for your application,
         in minutes. -->
	<session-config>
		<session-timeout>60</session-timeout>
		<!-- 60 minutes default -->
	</session-config>

</web-app>
