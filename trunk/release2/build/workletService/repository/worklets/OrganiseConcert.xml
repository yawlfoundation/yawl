<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.citi.qut.edu.au/yawl"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="Beta 7.1" 
      xsi:schemaLocation="http://www.citi.qut.edu.au/yawl YAWL_SchemaBeta7.1.xsd">
  <specification uri="OrganiseConcert">
    <metaData>
      <title>Organise Concert</title>
      <creator>Adams</creator>
      <description>Example used to test workletService Exception Handling</description>
      <version>0.1</version>
    </metaData>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" />
    <decomposition id="OrganiseConcert" isRootNet="true" xsi:type="NetFactsType">
      <localVariable>
        <name>Seating</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue>25000</initialValue>
      </localVariable>
      <localVariable>
        <name>TicketCost</name>
        <type>double</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue>90</initialValue>
      </localVariable>
      <localVariable>
        <name>TicketsSold</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue>0</initialValue>
      </localVariable>
      <localVariable>
        <name>VenueCost</name>
        <type>double</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue>100000.00</initialValue>
      </localVariable>
      <localVariable>
        <name>VenueName</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
        <initialValue>ANZ Stadium</initialValue>
      </localVariable>
      <processControlElements>
        <inputCondition id="InputCondition_1">
          <flowsInto>
            <nextElementRef id="BookStadium_5" />
          </flowsInto>
        </inputCondition>
        <task id="BookStadium_5">
          <flowsInto>
            <nextElementRef id="SellTickets_3" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
            <mapping>
              <expression query="&lt;VenueCost&gt;{/OrganiseConcert/VenueCost/text()}&lt;/VenueCost&gt;" />
              <mapsTo>VenueCost</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Seating&gt;{/OrganiseConcert/Seating/text()}&lt;/Seating&gt;" />
              <mapsTo>Seating</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;VenueName&gt;{/OrganiseConcert/VenueName/text()}&lt;/VenueName&gt;" />
              <mapsTo>VenueName</mapsTo>
            </mapping>
          </startingMappings>
          <completedMappings>
            <mapping>
              <expression query="&lt;VenueName&gt;{/BookStadium/VenueName/text()}&lt;/VenueName&gt;" />
              <mapsTo>VenueName</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Seating&gt;{/BookStadium/Seating/text()}&lt;/Seating&gt;" />
              <mapsTo>Seating</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;VenueCost&gt;{/BookStadium/VenueCost/text()}&lt;/VenueCost&gt;" />
              <mapsTo>VenueCost</mapsTo>
            </mapping>
          </completedMappings>
          <decomposesTo id="BookStadium" />
        </task>
        <task id="SellTickets_3">
          <flowsInto>
            <nextElementRef id="DoShow_4" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <completedMappings>
            <mapping>
              <expression query="&lt;TicketCost&gt;{/SellTickets/TicketCost/text()}&lt;/TicketCost&gt;" />
              <mapsTo>TicketCost</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;TicketsSold&gt;{/SellTickets/TicketsSold/text()}&lt;/TicketsSold&gt;" />
              <mapsTo>TicketsSold</mapsTo>
            </mapping>
          </completedMappings>
          <decomposesTo id="SellTickets" />
        </task>
        <task id="DoShow_4">
          <flowsInto>
            <nextElementRef id="OutputCondition_2" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
            <mapping>
              <expression query="&lt;Venue&gt;{/OrganiseConcert/VenueName/text()}&lt;/Venue&gt;" />
              <mapsTo>Venue</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;TicketsSold&gt;{/OrganiseConcert/TicketsSold/text()}&lt;/TicketsSold&gt;" />
              <mapsTo>TicketsSold</mapsTo>
            </mapping>
            <mapping>
              <expression query="&lt;Seating&gt;{/OrganiseConcert/Seating/text()}&lt;/Seating&gt;" />
              <mapsTo>Seating</mapsTo>
            </mapping>
          </startingMappings>
          <decomposesTo id="DoShow" />
        </task>
        <outputCondition id="OutputCondition_2" />
      </processControlElements>
    </decomposition>
    <decomposition id="DoShow" xsi:type="WebServiceGatewayFactsType">
      <inputParam>
        <name>Venue</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>TicketsSold</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Seating</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
    </decomposition>
    <decomposition id="BookStadium" xsi:type="WebServiceGatewayFactsType">
      <inputParam>
        <name>VenueCost</name>
        <type>double</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>Seating</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <inputParam>
        <name>VenueName</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </inputParam>
      <outputParam>
        <name>VenueCost</name>
        <type>double</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>Seating</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>VenueName</name>
        <type>string</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
    </decomposition>
    <decomposition id="SellTickets" xsi:type="WebServiceGatewayFactsType">
      <outputParam>
        <name>TicketCost</name>
        <type>double</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
      <outputParam>
        <name>TicketsSold</name>
        <type>long</type>
        <namespace>http://www.w3.org/2001/XMLSchema</namespace>
      </outputParam>
    </decomposition>
  </specification>
</specificationSet>


